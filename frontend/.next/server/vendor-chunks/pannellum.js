/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pannellum";
exports.ids = ["vendor-chunks/pannellum"];
exports.modules = {

/***/ "(ssr)/./node_modules/pannellum/build/pannellum.js":
/*!***************************************************!*\
  !*** ./node_modules/pannellum/build/pannellum.js ***!
  \***************************************************/
/***/ (() => {

eval("// Pannellum 2.5.6, https://github.com/mpetroff/pannellum\nwindow.libpannellum = function(E, g, p) {\n    function Ba(K) {\n        function ja(a, e) {\n            return 1 == a.level && 1 != e.level ? -1 : 1 == e.level && 1 != a.level ? 1 : e.timestamp - a.timestamp;\n        }\n        function Q(a, e) {\n            return a.level != e.level ? a.level - e.level : a.diff - e.diff;\n        }\n        function ka(a, e, c, g, l, h) {\n            this.vertices = a;\n            this.side = e;\n            this.level = c;\n            this.x = g;\n            this.y = l;\n            this.path = h.replace(\"%s\", e).replace(\"%l\", c).replace(\"%x\", g).replace(\"%y\", l);\n        }\n        function Ja(a, e, g, p, l) {\n            var h;\n            var d = e.vertices;\n            h = la(a, d.slice(0, 3));\n            var u = la(a, d.slice(3, 6)), x = la(a, d.slice(6, 9)), d = la(a, d.slice(9, 12)), t = h[0] + u[0] + x[0] + d[0];\n            -4 == t || 4 == t ? h = !1 : (t = h[1] + u[1] + x[1] + d[1], h = -4 == t || 4 == t ? !1 : 4 != h[2] + u[2] + x[2] + d[2]);\n            if (h) {\n                h = e.vertices;\n                u = h[0] + h[3] + h[6] + h[9];\n                x = h[1] + h[4] + h[7] + h[10];\n                d = h[2] + h[5] + h[8] + h[11];\n                t = Math.sqrt(u * u + x * x + d * d);\n                d = Math.asin(d / t);\n                u = Math.atan2(x, u) - p;\n                u += u > Math.PI ? -2 * Math.PI : u < -Math.PI ? 2 * Math.PI : 0;\n                u = Math.abs(u);\n                e.diff = Math.acos(Math.sin(g) * Math.sin(d) + Math.cos(g) * Math.cos(d) * Math.cos(u));\n                u = !1;\n                for(x = 0; x < c.nodeCache.length; x++)if (c.nodeCache[x].path == e.path) {\n                    u = !0;\n                    c.nodeCache[x].timestamp = c.nodeCacheTimestamp++;\n                    c.nodeCache[x].diff = e.diff;\n                    c.currentNodes.push(c.nodeCache[x]);\n                    break;\n                }\n                u || (e.timestamp = c.nodeCacheTimestamp++, c.currentNodes.push(e), c.nodeCache.push(e));\n                if (e.level < c.level) {\n                    var d = m.cubeResolution * Math.pow(2, e.level - m.maxLevel), u = Math.ceil(d * m.invTileResolution) - 1, x = d % m.tileResolution * 2, k = 2 * d % m.tileResolution;\n                    0 === k && (k = m.tileResolution);\n                    0 === x && (x = 2 * m.tileResolution);\n                    t = 0.5;\n                    if (e.x == u || e.y == u) t = 1 - m.tileResolution / (m.tileResolution + k);\n                    var y = 1 - t, d = [], s = t, z = t, D = t, I = y, A = y, B = y;\n                    if (k < m.tileResolution) if (e.x == u && e.y != u) {\n                        if (A = z = 0.5, \"d\" == e.side || \"u\" == e.side) B = D = 0.5;\n                    } else e.x != u && e.y == u && (I = s = 0.5, \"l\" == e.side || \"r\" == e.side) && (B = D = 0.5);\n                    x <= m.tileResolution && (e.x == u && (s = 0, I = 1, \"l\" == e.side || \"r\" == e.side) && (D = 0, B = 1), e.y == u && (z = 0, A = 1, \"d\" == e.side || \"u\" == e.side) && (D = 0, B = 1));\n                    k = [\n                        h[0],\n                        h[1],\n                        h[2],\n                        h[0] * s + h[3] * I,\n                        h[1] * t + h[4] * y,\n                        h[2] * D + h[5] * B,\n                        h[0] * s + h[6] * I,\n                        h[1] * z + h[7] * A,\n                        h[2] * D + h[8] * B,\n                        h[0] * t + h[9] * y,\n                        h[1] * z + h[10] * A,\n                        h[2] * D + h[11] * B\n                    ];\n                    k = new ka(k, e.side, e.level + 1, 2 * e.x, 2 * e.y, m.fullpath);\n                    d.push(k);\n                    e.x == u && x <= m.tileResolution || (k = [\n                        h[0] * s + h[3] * I,\n                        h[1] * t + h[4] * y,\n                        h[2] * D + h[5] * B,\n                        h[3],\n                        h[4],\n                        h[5],\n                        h[3] * t + h[6] * y,\n                        h[4] * z + h[7] * A,\n                        h[5] * D + h[8] * B,\n                        h[0] * s + h[6] * I,\n                        h[1] * z + h[7] * A,\n                        h[2] * D + h[8] * B\n                    ], k = new ka(k, e.side, e.level + 1, 2 * e.x + 1, 2 * e.y, m.fullpath), d.push(k));\n                    e.x == u && x <= m.tileResolution || e.y == u && x <= m.tileResolution || (k = [\n                        h[0] * s + h[6] * I,\n                        h[1] * z + h[7] * A,\n                        h[2] * D + h[8] * B,\n                        h[3] * t + h[6] * y,\n                        h[4] * z + h[7] * A,\n                        h[5] * D + h[8] * B,\n                        h[6],\n                        h[7],\n                        h[8],\n                        h[9] * s + h[6] * I,\n                        h[10] * t + h[7] * y,\n                        h[11] * D + h[8] * B\n                    ], k = new ka(k, e.side, e.level + 1, 2 * e.x + 1, 2 * e.y + 1, m.fullpath), d.push(k));\n                    e.y == u && x <= m.tileResolution || (k = [\n                        h[0] * t + h[9] * y,\n                        h[1] * z + h[10] * A,\n                        h[2] * D + h[11] * B,\n                        h[0] * s + h[6] * I,\n                        h[1] * z + h[7] * A,\n                        h[2] * D + h[8] * B,\n                        h[9] * s + h[6] * I,\n                        h[10] * t + h[7] * y,\n                        h[11] * D + h[8] * B,\n                        h[9],\n                        h[10],\n                        h[11]\n                    ], k = new ka(k, e.side, e.level + 1, 2 * e.x, 2 * e.y + 1, m.fullpath), d.push(k));\n                    for(e = 0; e < d.length; e++)Ja(a, d[e], g, p, l);\n                }\n            }\n        }\n        function ta() {\n            return [\n                -1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                1,\n                -1,\n                -1,\n                -1,\n                -1,\n                -1,\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                1,\n                -1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                1,\n                1,\n                1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                -1,\n                -1,\n                -1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                1,\n                -1,\n                -1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                1,\n                -1,\n                -1,\n                -1,\n                -1,\n                -1,\n                -1,\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                1,\n                1,\n                -1,\n                1,\n                1,\n                -1,\n                -1\n            ];\n        }\n        function ua(a, e, c) {\n            var g = Math.sin(e);\n            e = Math.cos(e);\n            if (\"x\" == c) return [\n                a[0],\n                e * a[1] + g * a[2],\n                e * a[2] - g * a[1],\n                a[3],\n                e * a[4] + g * a[5],\n                e * a[5] - g * a[4],\n                a[6],\n                e * a[7] + g * a[8],\n                e * a[8] - g * a[7]\n            ];\n            if (\"y\" == c) return [\n                e * a[0] - g * a[2],\n                a[1],\n                e * a[2] + g * a[0],\n                e * a[3] - g * a[5],\n                a[4],\n                e * a[5] + g * a[3],\n                e * a[6] - g * a[8],\n                a[7],\n                e * a[8] + g * a[6]\n            ];\n            if (\"z\" == c) return [\n                e * a[0] + g * a[1],\n                e * a[1] - g * a[0],\n                a[2],\n                e * a[3] + g * a[4],\n                e * a[4] - g * a[3],\n                a[5],\n                e * a[6] + g * a[7],\n                e * a[7] - g * a[6],\n                a[8]\n            ];\n        }\n        function ma(a) {\n            return [\n                a[0],\n                a[4],\n                a[8],\n                a[12],\n                a[1],\n                a[5],\n                a[9],\n                a[13],\n                a[2],\n                a[6],\n                a[10],\n                a[14],\n                a[3],\n                a[7],\n                a[11],\n                a[15]\n            ];\n        }\n        function Ka(a) {\n            La(a, a.path + \".\" + m.extension, function(e, c) {\n                a.texture = e;\n                a.textureLoaded = c ? 2 : 1;\n            }, va.crossOrigin);\n        }\n        function la(a, e) {\n            var c = [\n                a[0] * e[0] + a[1] * e[1] + a[2] * e[2],\n                a[4] * e[0] + a[5] * e[1] + a[6] * e[2],\n                a[11] + a[8] * e[0] + a[9] * e[1] + a[10] * e[2],\n                1 / (a[12] * e[0] + a[13] * e[1] + a[14] * e[2])\n            ], g = c[0] * c[3], l = c[1] * c[3], c = c[2] * c[3], h = [\n                0,\n                0,\n                0\n            ];\n            -1 > g && (h[0] = -1);\n            1 < g && (h[0] = 1);\n            -1 > l && (h[1] = -1);\n            1 < l && (h[1] = 1);\n            if (-1 > c || 1 < c) h[2] = 1;\n            return h;\n        }\n        function Ea() {\n            console.log(\"Reducing canvas size due to error 1286!\");\n            A.width = Math.round(A.width / 2);\n            A.height = Math.round(A.height / 2);\n        }\n        var A = g.createElement(\"canvas\");\n        A.style.width = A.style.height = \"100%\";\n        K.appendChild(A);\n        var c, a, U, V, $, R, wa, ga, m, z, F, ca, Fa, Y, na, va;\n        this.init = function(L, e, Ca, H, l, h, d, u) {\n            function x(a) {\n                if (E) {\n                    var e = a * a * 4, h = new Uint8ClampedArray(e), c = u.backgroundColor ? u.backgroundColor : [\n                        0,\n                        0,\n                        0\n                    ];\n                    c[0] *= 255;\n                    c[1] *= 255;\n                    c[2] *= 255;\n                    for(var b = 0; b < e; b++)h[b++] = c[0], h[b++] = c[1], h[b++] = c[2];\n                    a = new ImageData(h, a, a);\n                    for(t = 0; 6 > t; t++)0 == m[t].width && (m[t] = a);\n                }\n            }\n            e === p && (e = \"equirectangular\");\n            if (\"equirectangular\" != e && \"cubemap\" != e && \"multires\" != e) throw console.log(\"Error: invalid image type specified!\"), {\n                type: \"config error\"\n            };\n            z = e;\n            m = L;\n            F = Ca;\n            va = u || {};\n            if (c) {\n                U && (a.detachShader(c, U), a.deleteShader(U));\n                V && (a.detachShader(c, V), a.deleteShader(V));\n                a.bindBuffer(a.ARRAY_BUFFER, null);\n                a.bindBuffer(a.ELEMENT_ARRAY_BUFFER, null);\n                c.texture && a.deleteTexture(c.texture);\n                if (c.nodeCache) for(L = 0; L < c.nodeCache.length; L++)a.deleteTexture(c.nodeCache[L].texture);\n                a.deleteProgram(c);\n                c = p;\n            }\n            ga = p;\n            var t, E = !1, y;\n            if (\"cubemap\" == z) for(t = 0; 6 > t; t++)0 < m[t].width ? (y === p && (y = m[t].width), y != m[t].width && console.log(\"Cube faces have inconsistent widths: \" + y + \" vs. \" + m[t].width)) : E = !0;\n            \"cubemap\" == z && 0 !== (y & y - 1) && (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) || navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) || navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) || navigator.userAgent.match(/Trident.*rv[ :]*11\\./)) || (a || (a = A.getContext(\"experimental-webgl\", {\n                alpha: !1,\n                depth: !1\n            })), a && 1286 == a.getError() && Ea());\n            if (!a && (\"multires\" == z && m.hasOwnProperty(\"fallbackPath\") || \"cubemap\" == z) && (\"WebkitAppearance\" in g.documentElement.style || navigator.userAgent.match(/Trident.*rv[ :]*11\\./) || -1 !== navigator.appVersion.indexOf(\"MSIE 10\"))) {\n                R && K.removeChild(R);\n                R = g.createElement(\"div\");\n                R.className = \"pnlm-world\";\n                H = m.basePath ? m.basePath + m.fallbackPath : m.fallbackPath;\n                var Q = \"frblud\".split(\"\"), S = 0;\n                l = function() {\n                    var a = g.createElement(\"canvas\");\n                    a.className = \"pnlm-face pnlm-\" + Q[this.side] + \"face\";\n                    R.appendChild(a);\n                    var e = a.getContext(\"2d\");\n                    a.style.width = this.width + 4 + \"px\";\n                    a.style.height = this.height + 4 + \"px\";\n                    a.width = this.width + 4;\n                    a.height = this.height + 4;\n                    e.drawImage(this, 2, 2);\n                    var h = e.getImageData(0, 0, a.width, a.height), c = h.data, b, d;\n                    for(b = 2; b < a.width - 2; b++)for(d = 0; 4 > d; d++)c[4 * (b + a.width) + d] = c[4 * (b + 2 * a.width) + d], c[4 * (b + a.width * (a.height - 2)) + d] = c[4 * (b + a.width * (a.height - 3)) + d];\n                    for(b = 2; b < a.height - 2; b++)for(d = 0; 4 > d; d++)c[4 * (b * a.width + 1) + d] = c[4 * (b * a.width + 2) + d], c[4 * ((b + 1) * a.width - 2) + d] = c[4 * ((b + 1) * a.width - 3) + d];\n                    for(d = 0; 4 > d; d++)c[4 * (a.width + 1) + d] = c[4 * (2 * a.width + 2) + d], c[4 * (2 * a.width - 2) + d] = c[4 * (3 * a.width - 3) + d], c[4 * (a.width * (a.height - 2) + 1) + d] = c[4 * (a.width * (a.height - 3) + 2) + d], c[4 * (a.width * (a.height - 1) - 2) + d] = c[4 * (a.width * (a.height - 2) - 3) + d];\n                    for(b = 1; b < a.width - 1; b++)for(d = 0; 4 > d; d++)c[4 * b + d] = c[4 * (b + a.width) + d], c[4 * (b + a.width * (a.height - 1)) + d] = c[4 * (b + a.width * (a.height - 2)) + d];\n                    for(b = 1; b < a.height - 1; b++)for(d = 0; 4 > d; d++)c[b * a.width * 4 + d] = c[4 * (b * a.width + 1) + d], c[4 * ((b + 1) * a.width - 1) + d] = c[4 * ((b + 1) * a.width - 2) + d];\n                    for(d = 0; 4 > d; d++)c[d] = c[4 * (a.width + 1) + d], c[4 * (a.width - 1) + d] = c[4 * (2 * a.width - 2) + d], c[a.width * (a.height - 1) * 4 + d] = c[4 * (a.width * (a.height - 2) + 1) + d], c[4 * (a.width * a.height - 1) + d] = c[4 * (a.width * (a.height - 1) - 2) + d];\n                    e.putImageData(h, 0, 0);\n                    D.call(this);\n                };\n                var D = function() {\n                    0 < this.width ? ($ === p && ($ = this.width), $ != this.width && console.log(\"Fallback faces have inconsistent widths: \" + $ + \" vs. \" + this.width)) : E = !0;\n                    S++;\n                    6 == S && ($ = this.width, K.appendChild(R), d());\n                }, E = !1;\n                for(t = 0; 6 > t; t++)h = new Image, h.crossOrigin = va.crossOrigin ? va.crossOrigin : \"anonymous\", h.side = t, h.onload = l, h.onerror = D, h.src = \"multires\" == z ? H.replace(\"%s\", Q[t]) + \".\" + m.extension : m[t].src;\n                x($);\n            } else {\n                if (!a) throw console.log(\"Error: no WebGL support detected!\"), {\n                    type: \"no webgl\"\n                };\n                \"cubemap\" == z && x(y);\n                m.fullpath = m.basePath ? m.basePath + m.path : m.path;\n                m.invTileResolution = 1 / m.tileResolution;\n                L = ta();\n                wa = [];\n                for(t = 0; 6 > t; t++)wa[t] = L.slice(12 * t, 12 * t + 12), L = ta();\n                L = 0;\n                if (\"equirectangular\" == z) {\n                    if (L = a.getParameter(a.MAX_TEXTURE_SIZE), Math.max(m.width / 2, m.height) > L) throw console.log(\"Error: The image is too big; it's \" + m.width + \"px wide, but this device's maximum supported size is \" + 2 * L + \"px.\"), {\n                        type: \"webgl size error\",\n                        width: m.width,\n                        maxWidth: 2 * L\n                    };\n                } else if (\"cubemap\" == z && y > a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE)) throw console.log(\"Error: The image is too big; it's \" + y + \"px wide, but this device's maximum supported size is \" + L + \"px.\"), {\n                    type: \"webgl size error\",\n                    width: y,\n                    maxWidth: L\n                };\n                u === p || u.horizonPitch === p && u.horizonRoll === p || (ga = [\n                    u.horizonPitch == p ? 0 : u.horizonPitch,\n                    u.horizonRoll == p ? 0 : u.horizonRoll\n                ]);\n                y = a.TEXTURE_2D;\n                a.viewport(0, 0, a.drawingBufferWidth, a.drawingBufferHeight);\n                a.getShaderPrecisionFormat && (e = a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_FLOAT)) && 1 > e.precision && (oa = oa.replace(\"highp\", \"mediump\"));\n                U = a.createShader(a.VERTEX_SHADER);\n                e = s;\n                \"multires\" == z && (e = k);\n                a.shaderSource(U, e);\n                a.compileShader(U);\n                V = a.createShader(a.FRAGMENT_SHADER);\n                e = pa;\n                \"cubemap\" == z ? (y = a.TEXTURE_CUBE_MAP, e = qa) : \"multires\" == z && (e = bb);\n                a.shaderSource(V, e);\n                a.compileShader(V);\n                c = a.createProgram();\n                a.attachShader(c, U);\n                a.attachShader(c, V);\n                a.linkProgram(c);\n                a.getShaderParameter(U, a.COMPILE_STATUS) || console.log(a.getShaderInfoLog(U));\n                a.getShaderParameter(V, a.COMPILE_STATUS) || console.log(a.getShaderInfoLog(V));\n                a.getProgramParameter(c, a.LINK_STATUS) || console.log(a.getProgramInfoLog(c));\n                a.useProgram(c);\n                c.drawInProgress = !1;\n                e = u.backgroundColor ? u.backgroundColor : [\n                    0,\n                    0,\n                    0\n                ];\n                a.clearColor(e[0], e[1], e[2], 1);\n                a.clear(a.COLOR_BUFFER_BIT);\n                c.texCoordLocation = a.getAttribLocation(c, \"a_texCoord\");\n                a.enableVertexAttribArray(c.texCoordLocation);\n                \"multires\" != z ? (ca || (ca = a.createBuffer()), a.bindBuffer(a.ARRAY_BUFFER, ca), a.bufferData(a.ARRAY_BUFFER, new Float32Array([\n                    -1,\n                    1,\n                    1,\n                    1,\n                    1,\n                    -1,\n                    -1,\n                    1,\n                    1,\n                    -1,\n                    -1,\n                    -1\n                ]), a.STATIC_DRAW), a.vertexAttribPointer(c.texCoordLocation, 2, a.FLOAT, !1, 0, 0), c.aspectRatio = a.getUniformLocation(c, \"u_aspectRatio\"), a.uniform1f(c.aspectRatio, a.drawingBufferWidth / a.drawingBufferHeight), c.psi = a.getUniformLocation(c, \"u_psi\"), c.theta = a.getUniformLocation(c, \"u_theta\"), c.f = a.getUniformLocation(c, \"u_f\"), c.h = a.getUniformLocation(c, \"u_h\"), c.v = a.getUniformLocation(c, \"u_v\"), c.vo = a.getUniformLocation(c, \"u_vo\"), c.rot = a.getUniformLocation(c, \"u_rot\"), a.uniform1f(c.h, H / (2 * Math.PI)), a.uniform1f(c.v, l / Math.PI), a.uniform1f(c.vo, h / Math.PI * 2), \"equirectangular\" == z && (c.backgroundColor = a.getUniformLocation(c, \"u_backgroundColor\"), a.uniform4fv(c.backgroundColor, e.concat([\n                    1\n                ]))), c.texture = a.createTexture(), a.bindTexture(y, c.texture), \"cubemap\" == z ? (a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[1]), a.texImage2D(a.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[3]), a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[4]), a.texImage2D(a.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[5]), a.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[0]), a.texImage2D(a.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m[2])) : m.width <= L ? (a.uniform1i(a.getUniformLocation(c, \"u_splitImage\"), 0), a.texImage2D(y, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m)) : (a.uniform1i(a.getUniformLocation(c, \"u_splitImage\"), 1), H = g.createElement(\"canvas\"), H.width = m.width / 2, H.height = m.height, H = H.getContext(\"2d\"), H.drawImage(m, 0, 0), l = H.getImageData(0, 0, m.width / 2, m.height), a.texImage2D(y, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, l), c.texture2 = a.createTexture(), a.activeTexture(a.TEXTURE1), a.bindTexture(y, c.texture2), a.uniform1i(a.getUniformLocation(c, \"u_image1\"), 1), H.drawImage(m, -m.width / 2, 0), l = H.getImageData(0, 0, m.width / 2, m.height), a.texImage2D(y, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, l), a.texParameteri(y, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE), a.texParameteri(y, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE), a.texParameteri(y, a.TEXTURE_MIN_FILTER, a.LINEAR), a.texParameteri(y, a.TEXTURE_MAG_FILTER, a.LINEAR), a.activeTexture(a.TEXTURE0)), a.texParameteri(y, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE), a.texParameteri(y, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE), a.texParameteri(y, a.TEXTURE_MIN_FILTER, a.LINEAR), a.texParameteri(y, a.TEXTURE_MAG_FILTER, a.LINEAR)) : (c.vertPosLocation = a.getAttribLocation(c, \"a_vertCoord\"), a.enableVertexAttribArray(c.vertPosLocation), Fa || (Fa = a.createBuffer()), Y || (Y = a.createBuffer()), na || (na = a.createBuffer()), a.bindBuffer(a.ARRAY_BUFFER, Y), a.bufferData(a.ARRAY_BUFFER, new Float32Array([\n                    0,\n                    0,\n                    1,\n                    0,\n                    1,\n                    1,\n                    0,\n                    1\n                ]), a.STATIC_DRAW), a.bindBuffer(a.ELEMENT_ARRAY_BUFFER, na), a.bufferData(a.ELEMENT_ARRAY_BUFFER, new Uint16Array([\n                    0,\n                    1,\n                    2,\n                    0,\n                    2,\n                    3\n                ]), a.STATIC_DRAW), c.perspUniform = a.getUniformLocation(c, \"u_perspMatrix\"), c.cubeUniform = a.getUniformLocation(c, \"u_cubeMatrix\"), c.level = -1, c.currentNodes = [], c.nodeCache = [], c.nodeCacheTimestamp = 0);\n                H = a.getError();\n                if (0 !== H) throw console.log(\"Error: Something went wrong with WebGL!\", H), {\n                    type: \"webgl error\"\n                };\n                d();\n            }\n        };\n        this.destroy = function() {\n            K !== p && (A !== p && K.contains(A) && K.removeChild(A), R !== p && K.contains(R) && K.removeChild(R));\n            if (a) {\n                var c = a.getExtension(\"WEBGL_lose_context\");\n                c && c.loseContext();\n            }\n        };\n        this.resize = function() {\n            var g = E.devicePixelRatio || 1;\n            A.width = A.clientWidth * g;\n            A.height = A.clientHeight * g;\n            a && (1286 == a.getError() && Ea(), a.viewport(0, 0, a.drawingBufferWidth, a.drawingBufferHeight), \"multires\" != z && a.uniform1f(c.aspectRatio, A.clientWidth / A.clientHeight));\n        };\n        this.resize();\n        this.setPose = function(a, c) {\n            ga = [\n                a,\n                c\n            ];\n        };\n        this.render = function(g, e, k, s) {\n            var l, h = 0;\n            s === p && (s = {});\n            s.roll && (h = s.roll);\n            if (ga !== p) {\n                l = ga[0];\n                var d = ga[1], u = g, x = e, t = Math.cos(d) * Math.sin(g) * Math.sin(l) + Math.cos(g) * (Math.cos(l) * Math.cos(e) + Math.sin(d) * Math.sin(l) * Math.sin(e)), E = -Math.sin(g) * Math.sin(d) + Math.cos(g) * Math.cos(d) * Math.sin(e);\n                g = Math.cos(d) * Math.cos(l) * Math.sin(g) + Math.cos(g) * (-Math.cos(e) * Math.sin(l) + Math.cos(l) * Math.sin(d) * Math.sin(e));\n                g = Math.asin(Math.max(Math.min(g, 1), -1));\n                e = Math.atan2(E, t);\n                l = [\n                    Math.cos(u) * (Math.sin(d) * Math.sin(l) * Math.cos(x) - Math.cos(l) * Math.sin(x)),\n                    Math.cos(u) * Math.cos(d) * Math.cos(x),\n                    Math.cos(u) * (Math.cos(l) * Math.sin(d) * Math.cos(x) + Math.sin(x) * Math.sin(l))\n                ];\n                d = [\n                    -Math.cos(g) * Math.sin(e),\n                    Math.cos(g) * Math.cos(e)\n                ];\n                d = Math.acos(Math.max(Math.min((l[0] * d[0] + l[1] * d[1]) / (Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]) * Math.sqrt(d[0] * d[0] + d[1] * d[1])), 1), -1));\n                0 > l[2] && (d = 2 * Math.PI - d);\n                h += d;\n            }\n            if (a || \"multires\" != z && \"cubemap\" != z) {\n                if (\"multires\" != z) k = 2 * Math.atan(Math.tan(0.5 * k) / (a.drawingBufferWidth / a.drawingBufferHeight)), k = 1 / Math.tan(0.5 * k), a.uniform1f(c.psi, e), a.uniform1f(c.theta, g), a.uniform1f(c.rot, h), a.uniform1f(c.f, k), !0 === F && \"equirectangular\" == z && (a.bindTexture(a.TEXTURE_2D, c.texture), a.texImage2D(a.TEXTURE_2D, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, m)), a.drawArrays(a.TRIANGLES, 0, 6);\n                else {\n                    l = a.drawingBufferWidth / a.drawingBufferHeight;\n                    d = 2 * Math.atan(Math.tan(k / 2) * a.drawingBufferHeight / a.drawingBufferWidth);\n                    d = 1 / Math.tan(d / 2);\n                    l = [\n                        d / l,\n                        0,\n                        0,\n                        0,\n                        0,\n                        d,\n                        0,\n                        0,\n                        0,\n                        0,\n                        100.1 / -99.9,\n                        20 / -99.9,\n                        0,\n                        0,\n                        -1,\n                        0\n                    ];\n                    for(d = 1; d < m.maxLevel && a.drawingBufferWidth > m.tileResolution * Math.pow(2, d - 1) * Math.tan(k / 2) * 0.707;)d++;\n                    c.level = d;\n                    d = [\n                        1,\n                        0,\n                        0,\n                        0,\n                        1,\n                        0,\n                        0,\n                        0,\n                        1\n                    ];\n                    d = ua(d, -h, \"z\");\n                    d = ua(d, -g, \"x\");\n                    d = ua(d, e, \"y\");\n                    d = [\n                        d[0],\n                        d[1],\n                        d[2],\n                        0,\n                        d[3],\n                        d[4],\n                        d[5],\n                        0,\n                        d[6],\n                        d[7],\n                        d[8],\n                        0,\n                        0,\n                        0,\n                        0,\n                        1\n                    ];\n                    a.uniformMatrix4fv(c.perspUniform, !1, new Float32Array(ma(l)));\n                    a.uniformMatrix4fv(c.cubeUniform, !1, new Float32Array(ma(d)));\n                    h = [\n                        l[0] * d[0],\n                        l[0] * d[1],\n                        l[0] * d[2],\n                        0,\n                        l[5] * d[4],\n                        l[5] * d[5],\n                        l[5] * d[6],\n                        0,\n                        l[10] * d[8],\n                        l[10] * d[9],\n                        l[10] * d[10],\n                        l[11],\n                        -d[8],\n                        -d[9],\n                        -d[10],\n                        0\n                    ];\n                    c.nodeCache.sort(ja);\n                    if (200 < c.nodeCache.length && c.nodeCache.length > c.currentNodes.length + 50) for(l = c.nodeCache.splice(200, c.nodeCache.length - 200), d = 0; d < l.length; d++)a.deleteTexture(l[d].texture);\n                    c.currentNodes = [];\n                    d = \"fbudlr\".split(\"\");\n                    for(l = 0; 6 > l; l++)u = new ka(wa[l], d[l], 1, 0, 0, m.fullpath), Ja(h, u, g, e, k);\n                    c.currentNodes.sort(Q);\n                    for(g = S.length - 1; 0 <= g; g--)-1 === c.currentNodes.indexOf(S[g].node) && (S[g].node.textureLoad = !1, S.splice(g, 1));\n                    if (0 === S.length) {\n                        for(g = 0; g < c.currentNodes.length; g++)if (e = c.currentNodes[g], !e.texture && !e.textureLoad) {\n                            e.textureLoad = !0;\n                            setTimeout(Ka, 0, e);\n                            break;\n                        }\n                    }\n                    if (!c.drawInProgress) {\n                        c.drawInProgress = !0;\n                        a.clear(a.COLOR_BUFFER_BIT);\n                        for(g = 0; g < c.currentNodes.length; g++)1 < c.currentNodes[g].textureLoaded && (a.bindBuffer(a.ARRAY_BUFFER, Fa), a.bufferData(a.ARRAY_BUFFER, new Float32Array(c.currentNodes[g].vertices), a.STATIC_DRAW), a.vertexAttribPointer(c.vertPosLocation, 3, a.FLOAT, !1, 0, 0), a.bindBuffer(a.ARRAY_BUFFER, Y), a.vertexAttribPointer(c.texCoordLocation, 2, a.FLOAT, !1, 0, 0), a.bindTexture(a.TEXTURE_2D, c.currentNodes[g].texture), a.drawElements(a.TRIANGLES, 6, a.UNSIGNED_SHORT, 0));\n                        c.drawInProgress = !1;\n                    }\n                }\n                if (s.returnImage !== p) return A.toDataURL(\"image/png\");\n            } else for(l = $ / 2, s = {\n                f: \"translate3d(-\" + (l + 2) + \"px, -\" + (l + 2) + \"px, -\" + l + \"px)\",\n                b: \"translate3d(\" + (l + 2) + \"px, -\" + (l + 2) + \"px, \" + l + \"px) rotateX(180deg) rotateZ(180deg)\",\n                u: \"translate3d(-\" + (l + 2) + \"px, -\" + l + \"px, \" + (l + 2) + \"px) rotateX(270deg)\",\n                d: \"translate3d(-\" + (l + 2) + \"px, \" + l + \"px, -\" + (l + 2) + \"px) rotateX(90deg)\",\n                l: \"translate3d(-\" + l + \"px, -\" + (l + 2) + \"px, \" + (l + 2) + \"px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)\",\n                r: \"translate3d(\" + l + \"px, -\" + (l + 2) + \"px, -\" + (l + 2) + \"px) rotateY(270deg)\"\n            }, k = 1 / Math.tan(k / 2), k = k * A.clientWidth / 2 + \"px\", e = \"perspective(\" + k + \") translateZ(\" + k + \") rotateX(\" + g + \"rad) rotateY(\" + e + \"rad) \", k = Object.keys(s), g = 0; 6 > g; g++)if (h = R.querySelector(\".pnlm-\" + k[g] + \"face\")) h.style.webkitTransform = e + s[k[g]], h.style.transform = e + s[k[g]];\n        };\n        this.isLoading = function() {\n            if (a && \"multires\" == z) {\n                for(var g = 0; g < c.currentNodes.length; g++)if (!c.currentNodes[g].textureLoaded) return !0;\n            }\n            return !1;\n        };\n        this.getCanvas = function() {\n            return A;\n        };\n        var S = [], La = function() {\n            function c() {\n                var d = this;\n                this.texture = this.callback = null;\n                this.image = new Image;\n                this.image.crossOrigin = l ? l : \"anonymous\";\n                var e = function() {\n                    if (0 < d.image.width && 0 < d.image.height) {\n                        var c = d.image;\n                        a.bindTexture(a.TEXTURE_2D, d.texture);\n                        a.texImage2D(a.TEXTURE_2D, 0, a.RGB, a.RGB, a.UNSIGNED_BYTE, c);\n                        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.LINEAR);\n                        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR);\n                        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE);\n                        a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE);\n                        a.bindTexture(a.TEXTURE_2D, null);\n                        d.callback(d.texture, !0);\n                    } else d.callback(d.texture, !1);\n                    S.length ? (c = S.shift(), d.loadTexture(c.src, c.texture, c.callback)) : k[g++] = d;\n                };\n                this.image.addEventListener(\"load\", e);\n                this.image.addEventListener(\"error\", e);\n            }\n            function e(a, c, e, g) {\n                this.node = a;\n                this.src = c;\n                this.texture = e;\n                this.callback = g;\n            }\n            var g = 4, k = {}, l;\n            c.prototype.loadTexture = function(a, c, e) {\n                this.texture = c;\n                this.callback = e;\n                this.image.src = a;\n            };\n            for(var h = 0; h < g; h++)k[h] = new c;\n            return function(c, h, m, p) {\n                l = p;\n                p = a.createTexture();\n                g ? k[--g].loadTexture(h, p, m) : S.push(new e(c, h, p, m));\n                return p;\n            };\n        }();\n    }\n    var s = \"attribute vec2 a_texCoord;varying vec2 v_texCoord;void main() {gl_Position = vec4(a_texCoord, 0.0, 1.0);v_texCoord = a_texCoord;}\", k = \"attribute vec3 a_vertCoord;attribute vec2 a_texCoord;uniform mat4 u_cubeMatrix;uniform mat4 u_perspMatrix;varying mediump vec2 v_texCoord;void main(void) {gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);v_texCoord = a_texCoord;}\", oa = \"precision highp float;\\nuniform float u_aspectRatio;\\nuniform float u_psi;\\nuniform float u_theta;\\nuniform float u_f;\\nuniform float u_h;\\nuniform float u_v;\\nuniform float u_vo;\\nuniform float u_rot;\\nconst float PI = 3.14159265358979323846264;\\nuniform sampler2D u_image0;\\nuniform sampler2D u_image1;\\nuniform bool u_splitImage;\\nuniform samplerCube u_imageCube;\\nvarying vec2 v_texCoord;\\nuniform vec4 u_backgroundColor;\\nvoid main() {\\nfloat x = v_texCoord.x * u_aspectRatio;\\nfloat y = v_texCoord.y;\\nfloat sinrot = sin(u_rot);\\nfloat cosrot = cos(u_rot);\\nfloat rot_x = x * cosrot - y * sinrot;\\nfloat rot_y = x * sinrot + y * cosrot;\\nfloat sintheta = sin(u_theta);\\nfloat costheta = cos(u_theta);\\nfloat a = u_f * costheta - rot_y * sintheta;\\nfloat root = sqrt(rot_x * rot_x + a * a);\\nfloat lambda = atan(rot_x / root, a / root) + u_psi;\\nfloat phi = atan((rot_y * costheta + u_f * sintheta) / root);\", qa = oa + \"float cosphi = cos(phi);\\ngl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));\\n}\", pa = oa + \"lambda = mod(lambda + PI, PI * 2.0) - PI;\\nvec2 coord = vec2(lambda / PI, phi / (PI / 2.0));\\nif(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)\\ngl_FragColor = u_backgroundColor;\\nelse {\\nif(u_splitImage) {\\nif(coord.x < 0.0)\\ngl_FragColor = texture2D(u_image0, vec2((coord.x + u_h) / u_h, (-coord.y + u_v + u_vo) / (u_v * 2.0)));\\nelse\\ngl_FragColor = texture2D(u_image1, vec2((coord.x + u_h) / u_h - 1.0, (-coord.y + u_v + u_vo) / (u_v * 2.0)));\\n} else {\\ngl_FragColor = texture2D(u_image0, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));\\n}\\n}\\n}\", bb = \"varying mediump vec2 v_texCoord;uniform sampler2D u_sampler;void main(void) {gl_FragColor = texture2D(u_sampler, v_texCoord);}\";\n    return {\n        renderer: function(g, k, p, s) {\n            return new Ba(g, k, p, s);\n        }\n    };\n}(window, document);\nwindow.pannellum = function(E, g, p) {\n    function Ba(s, k) {\n        function oa() {\n            var a = g.createElement(\"div\");\n            a.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n            if (1 == a.getElementsByTagName(\"i\").length) K();\n            else {\n                ra = b.hfov;\n                Ga = b.pitch;\n                var f;\n                if (\"cubemap\" == b.type) {\n                    P = [];\n                    for(a = 0; 6 > a; a++)P.push(new Image), P[a].crossOrigin = b.crossOrigin;\n                    q.load.lbox.style.display = \"block\";\n                    q.load.lbar.style.display = \"none\";\n                } else if (\"multires\" == b.type) a = JSON.parse(JSON.stringify(b.multiRes)), b.basePath && b.multiRes.basePath && !/^(?:[a-z]+:)?\\/\\//i.test(b.multiRes.basePath) ? a.basePath = b.basePath + b.multiRes.basePath : b.multiRes.basePath ? a.basePath = b.multiRes.basePath : b.basePath && (a.basePath = b.basePath), P = a;\n                else if (!0 === b.dynamic) P = b.panorama;\n                else {\n                    if (b.panorama === p) {\n                        K(b.strings.noPanoramaError);\n                        return;\n                    }\n                    P = new Image;\n                }\n                if (\"cubemap\" == b.type) for(var n = 6, c = function() {\n                    n--;\n                    0 === n && pa();\n                }, d = function(a) {\n                    var ea = g.createElement(\"a\");\n                    ea.href = a.target.src;\n                    ea.textContent = ea.href;\n                    K(b.strings.fileAccessError.replace(\"%s\", ea.outerHTML));\n                }, a = 0; a < P.length; a++)f = b.cubeMap[a], \"null\" == f ? (console.log(\"Will use background instead of missing cubemap face \" + a), c()) : (b.basePath && !qa(f) && (f = b.basePath + f), P[a].onload = c, P[a].onerror = d, P[a].src = I(f));\n                else if (\"multires\" == b.type) pa();\n                else if (f = \"\", b.basePath && (f = b.basePath), !0 !== b.dynamic) {\n                    f = qa(b.panorama) ? b.panorama : f + b.panorama;\n                    P.onload = function() {\n                        E.URL.revokeObjectURL(this.src);\n                        pa();\n                    };\n                    var e = new XMLHttpRequest;\n                    e.onloadend = function() {\n                        if (200 != e.status) {\n                            var a = g.createElement(\"a\");\n                            a.href = f;\n                            a.textContent = a.href;\n                            K(b.strings.fileAccessError.replace(\"%s\", a.outerHTML));\n                        }\n                        Ba(this.response);\n                        q.load.msg.innerHTML = \"\";\n                    };\n                    e.onprogress = function(a) {\n                        if (a.lengthComputable) {\n                            q.load.lbarFill.style.width = a.loaded / a.total * 100 + \"%\";\n                            var b, ea;\n                            1E6 < a.total ? (b = \"MB\", ea = (a.loaded / 1E6).toFixed(2), a = (a.total / 1E6).toFixed(2)) : 1E3 < a.total ? (b = \"kB\", ea = (a.loaded / 1E3).toFixed(1), a = (a.total / 1E3).toFixed(1)) : (b = \"B\", ea = a.loaded, a = a.total);\n                            q.load.msg.innerHTML = ea + \" / \" + a + \" \" + b;\n                        } else q.load.lbox.style.display = \"block\", q.load.lbar.style.display = \"none\";\n                    };\n                    try {\n                        e.open(\"GET\", f, !0);\n                    } catch (h) {\n                        K(b.strings.malformedURLError);\n                    }\n                    e.responseType = \"blob\";\n                    e.setRequestHeader(\"Accept\", \"image/*,*/*;q=0.9\");\n                    e.withCredentials = \"use-credentials\" === b.crossOrigin;\n                    e.send();\n                }\n                b.draggable && J.classList.add(\"pnlm-grab\");\n                J.classList.remove(\"pnlm-grabbing\");\n                Ma = !0 === b.dynamicUpdate;\n                b.dynamic && Ma && (P = b.panorama, pa());\n            }\n        }\n        function qa(a) {\n            return /^(?:[a-z]+:)?\\/\\//i.test(a) || \"/\" == a[0] || \"blob:\" == a.slice(0, 5);\n        }\n        function pa() {\n            C || (C = new libpannellum.renderer(M));\n            Sa || (Sa = !0, W.addEventListener(\"mousedown\", ka, !1), g.addEventListener(\"mousemove\", ua, !1), g.addEventListener(\"mouseup\", ma, !1), b.mouseZoom && (J.addEventListener(\"mousewheel\", U, !1), J.addEventListener(\"DOMMouseScroll\", U, !1)), b.doubleClickZoom && W.addEventListener(\"dblclick\", Ja, !1), s.addEventListener(\"mozfullscreenchange\", d, !1), s.addEventListener(\"webkitfullscreenchange\", d, !1), s.addEventListener(\"msfullscreenchange\", d, !1), s.addEventListener(\"fullscreenchange\", d, !1), E.addEventListener(\"resize\", z, !1), E.addEventListener(\"orientationchange\", z, !1), b.disableKeyboardCtrl || (s.addEventListener(\"keydown\", V, !1), s.addEventListener(\"keyup\", R, !1), s.addEventListener(\"blur\", $, !1)), g.addEventListener(\"mouseleave\", ma, !1), \"\" === g.documentElement.style.pointerAction && \"\" === g.documentElement.style.touchAction ? (W.addEventListener(\"pointerdown\", A, !1), W.addEventListener(\"pointermove\", c, !1), W.addEventListener(\"pointerup\", a, !1), W.addEventListener(\"pointerleave\", a, !1)) : (W.addEventListener(\"touchstart\", Ka, !1), W.addEventListener(\"touchmove\", la, !1), W.addEventListener(\"touchend\", Ea, !1)), E.navigator.pointerEnabled && (s.style.touchAction = \"none\"));\n            va();\n            x(b.hfov);\n            setTimeout(function() {}, 500);\n        }\n        function Ba(a) {\n            var f = new FileReader;\n            f.addEventListener(\"loadend\", function() {\n                var n = f.result;\n                if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n                    var c = n.indexOf(\"\\xff\\xc2\");\n                    (0 > c || 65536 < c) && K(b.strings.iOS8WebGLError);\n                }\n                c = n.indexOf(\"<x:xmpmeta\");\n                if (-1 < c && !0 !== b.ignoreGPanoXMP) {\n                    var d = n.substring(c, n.indexOf(\"</x:xmpmeta>\") + 12), e = function(a) {\n                        var b;\n                        0 <= d.indexOf(a + '=\"') ? (b = d.substring(d.indexOf(a + '=\"') + a.length + 2), b = b.substring(0, b.indexOf('\"'))) : 0 <= d.indexOf(a + \">\") && (b = d.substring(d.indexOf(a + \">\") + a.length + 1), b = b.substring(0, b.indexOf(\"<\")));\n                        return b !== p ? Number(b) : null;\n                    }, n = e(\"GPano:FullPanoWidthPixels\"), c = e(\"GPano:CroppedAreaImageWidthPixels\"), g = e(\"GPano:FullPanoHeightPixels\"), h = e(\"GPano:CroppedAreaImageHeightPixels\"), l = e(\"GPano:CroppedAreaTopPixels\"), k = e(\"GPano:PoseHeadingDegrees\"), m = e(\"GPano:PosePitchDegrees\"), e = e(\"GPano:PoseRollDegrees\");\n                    null !== n && null !== c && null !== g && null !== h && null !== l && (0 > aa.indexOf(\"haov\") && (b.haov = c / n * 360), 0 > aa.indexOf(\"vaov\") && (b.vaov = h / g * 180), 0 > aa.indexOf(\"vOffset\") && (b.vOffset = -180 * ((l + h / 2) / g - 0.5)), null !== k && 0 > aa.indexOf(\"northOffset\") && (b.northOffset = k, !1 !== b.compass && (b.compass = !0)), null !== m && null !== e && (0 > aa.indexOf(\"horizonPitch\") && (b.horizonPitch = m), 0 > aa.indexOf(\"horizonRoll\") && (b.horizonRoll = e)));\n                }\n                P.src = E.URL.createObjectURL(a);\n            });\n            f.readAsBinaryString !== p ? f.readAsBinaryString(a) : f.readAsText(a);\n        }\n        function K(a) {\n            a === p && (a = b.strings.genericWebGLError);\n            q.errorMsg.innerHTML = \"<p>\" + a + \"</p>\";\n            v.load.style.display = \"none\";\n            q.load.box.style.display = \"none\";\n            q.errorMsg.style.display = \"table\";\n            Na = !0;\n            G = p;\n            M.style.display = \"none\";\n            B(\"error\", a);\n        }\n        function ja(a) {\n            var b = Q(a);\n            fa.style.left = b.x + \"px\";\n            fa.style.top = b.y + \"px\";\n            clearTimeout(ja.t1);\n            clearTimeout(ja.t2);\n            fa.style.display = \"block\";\n            fa.style.opacity = 1;\n            ja.t1 = setTimeout(function() {\n                fa.style.opacity = 0;\n            }, 2E3);\n            ja.t2 = setTimeout(function() {\n                fa.style.display = \"none\";\n            }, 2500);\n            a.preventDefault();\n        }\n        function Q(a) {\n            var b = s.getBoundingClientRect(), n = {};\n            n.x = (a.clientX || a.pageX) - b.left;\n            n.y = (a.clientY || a.pageY) - b.top;\n            return n;\n        }\n        function ka(a) {\n            a.preventDefault();\n            s.focus();\n            if (G && b.draggable) {\n                var f = Q(a);\n                if (b.hotSpotDebug) {\n                    var n = ta(a);\n                    console.log(\"Pitch: \" + n[0] + \", Yaw: \" + n[1] + \", Center Pitch: \" + b.pitch + \", Center Yaw: \" + b.yaw + \", HFOV: \" + b.hfov);\n                }\n                t();\n                Da();\n                b.roll = 0;\n                w.hfov = 0;\n                ha = !0;\n                N = Date.now();\n                xa = f.x;\n                ya = f.y;\n                Oa = b.yaw;\n                Pa = b.pitch;\n                J.classList.add(\"pnlm-grabbing\");\n                J.classList.remove(\"pnlm-grab\");\n                B(\"mousedown\", a);\n                F();\n            }\n        }\n        function Ja(a) {\n            b.minHfov === b.hfov ? da.setHfov(ra, 1E3) : (a = ta(a), da.lookAt(a[0], a[1], b.minHfov, 1E3));\n        }\n        function ta(a) {\n            var f = Q(a);\n            a = C.getCanvas();\n            var n = a.clientWidth, c = a.clientHeight;\n            a = f.x / n * 2 - 1;\n            var c = (1 - f.y / c * 2) * c / n, e = 1 / Math.tan(b.hfov * Math.PI / 360), d = Math.sin(b.pitch * Math.PI / 180), g = Math.cos(b.pitch * Math.PI / 180), f = e * g - c * d, n = Math.sqrt(a * a + f * f), c = 180 * Math.atan((c * g + e * d) / n) / Math.PI;\n            a = 180 * Math.atan2(a / n, f / n) / Math.PI + b.yaw;\n            -180 > a && (a += 360);\n            180 < a && (a -= 360);\n            return [\n                c,\n                a\n            ];\n        }\n        function ua(a) {\n            if (ha && G) {\n                N = Date.now();\n                var f = C.getCanvas(), n = f.clientWidth, f = f.clientHeight;\n                a = Q(a);\n                var c = 180 * (Math.atan(xa / n * 2 - 1) - Math.atan(a.x / n * 2 - 1)) / Math.PI * b.hfov / 90 + Oa;\n                w.yaw = (c - b.yaw) % 360 * 0.2;\n                b.yaw = c;\n                n = 360 * Math.atan(Math.tan(b.hfov / 360 * Math.PI) * f / n) / Math.PI;\n                n = 180 * (Math.atan(a.y / f * 2 - 1) - Math.atan(ya / f * 2 - 1)) / Math.PI * n / 90 + Pa;\n                w.pitch = 0.2 * (n - b.pitch);\n                b.pitch = n;\n            }\n        }\n        function ma(a) {\n            ha && (ha = !1, 15 < Date.now() - N && (w.pitch = w.yaw = 0), J.classList.add(\"pnlm-grab\"), J.classList.remove(\"pnlm-grabbing\"), N = Date.now(), B(\"mouseup\", a));\n        }\n        function Ka(a) {\n            if (G && b.draggable) {\n                t();\n                Da();\n                b.roll = 0;\n                w.hfov = 0;\n                var f = Q(a.targetTouches[0]);\n                xa = f.x;\n                ya = f.y;\n                if (2 == a.targetTouches.length) {\n                    var n = Q(a.targetTouches[1]);\n                    xa += 0.5 * (n.x - f.x);\n                    ya += 0.5 * (n.y - f.y);\n                    Ha = Math.sqrt((f.x - n.x) * (f.x - n.x) + (f.y - n.y) * (f.y - n.y));\n                }\n                ha = !0;\n                N = Date.now();\n                Oa = b.yaw;\n                Pa = b.pitch;\n                B(\"touchstart\", a);\n                F();\n            }\n        }\n        function la(a) {\n            if (b.draggable && (a.preventDefault(), G && (N = Date.now()), ha && G)) {\n                var f = Q(a.targetTouches[0]), n = f.x, c = f.y;\n                2 == a.targetTouches.length && -1 != Ha && (a = Q(a.targetTouches[1]), n += 0.5 * (a.x - f.x), c += 0.5 * (a.y - f.y), f = Math.sqrt((f.x - a.x) * (f.x - a.x) + (f.y - a.y) * (f.y - a.y)), x(b.hfov + 0.1 * (Ha - f)), Ha = f);\n                f = b.hfov / 360 * b.touchPanSpeedCoeffFactor;\n                n = (xa - n) * f + Oa;\n                w.yaw = (n - b.yaw) % 360 * 0.2;\n                b.yaw = n;\n                c = (c - ya) * f + Pa;\n                w.pitch = 0.2 * (c - b.pitch);\n                b.pitch = c;\n            }\n        }\n        function Ea() {\n            ha = !1;\n            150 < Date.now() - N && (w.pitch = w.yaw = 0);\n            Ha = -1;\n            N = Date.now();\n            B(\"touchend\", event);\n        }\n        function A(a) {\n            \"touch\" == a.pointerType && G && b.draggable && (ia.push(a.pointerId), za.push({\n                clientX: a.clientX,\n                clientY: a.clientY\n            }), a.targetTouches = za, Ka(a), a.preventDefault());\n        }\n        function c(a) {\n            if (\"touch\" == a.pointerType && b.draggable) {\n                for(var f = 0; f < ia.length; f++)if (a.pointerId == ia[f]) {\n                    za[f].clientX = a.clientX;\n                    za[f].clientY = a.clientY;\n                    a.targetTouches = za;\n                    la(a);\n                    a.preventDefault();\n                    break;\n                }\n            }\n        }\n        function a(a) {\n            if (\"touch\" == a.pointerType) {\n                for(var b = !1, n = 0; n < ia.length; n++)a.pointerId == ia[n] && (ia[n] = p), ia[n] && (b = !0);\n                b || (ia = [], za = [], Ea());\n                a.preventDefault();\n            }\n        }\n        function U(a) {\n            G && (\"fullscreenonly\" != b.mouseZoom || Aa) && (a.preventDefault(), t(), N = Date.now(), a.wheelDeltaY ? (x(b.hfov - 0.05 * a.wheelDeltaY), w.hfov = 0 > a.wheelDelta ? 1 : -1) : a.wheelDelta ? (x(b.hfov - 0.05 * a.wheelDelta), w.hfov = 0 > a.wheelDelta ? 1 : -1) : a.detail && (x(b.hfov + 1.5 * a.detail), w.hfov = 0 < a.detail ? 1 : -1), F());\n        }\n        function V(a) {\n            t();\n            N = Date.now();\n            Da();\n            b.roll = 0;\n            var f = a.which || a.keycode;\n            0 > b.capturedKeyNumbers.indexOf(f) || (a.preventDefault(), 27 == f ? Aa && h() : wa(f, !0));\n        }\n        function $() {\n            for(var a = 0; 10 > a; a++)r[a] = !1;\n        }\n        function R(a) {\n            var f = a.which || a.keycode;\n            0 > b.capturedKeyNumbers.indexOf(f) || (a.preventDefault(), wa(f, !1));\n        }\n        function wa(a, b) {\n            var n = !1;\n            switch(a){\n                case 109:\n                case 189:\n                case 17:\n                case 173:\n                    r[0] != b && (n = !0);\n                    r[0] = b;\n                    break;\n                case 107:\n                case 187:\n                case 16:\n                case 61:\n                    r[1] != b && (n = !0);\n                    r[1] = b;\n                    break;\n                case 38:\n                    r[2] != b && (n = !0);\n                    r[2] = b;\n                    break;\n                case 87:\n                    r[6] != b && (n = !0);\n                    r[6] = b;\n                    break;\n                case 40:\n                    r[3] != b && (n = !0);\n                    r[3] = b;\n                    break;\n                case 83:\n                    r[7] != b && (n = !0);\n                    r[7] = b;\n                    break;\n                case 37:\n                    r[4] != b && (n = !0);\n                    r[4] = b;\n                    break;\n                case 65:\n                    r[8] != b && (n = !0);\n                    r[8] = b;\n                    break;\n                case 39:\n                    r[5] != b && (n = !0);\n                    r[5] = b;\n                    break;\n                case 68:\n                    r[9] != b && (n = !0), r[9] = b;\n            }\n            n && b && (ba = \"undefined\" !== typeof performance && performance.now() ? performance.now() : Date.now(), F());\n        }\n        function ga() {\n            if (G) {\n                var a = !1, f = b.pitch, n = b.yaw, c = b.hfov, e;\n                e = \"undefined\" !== typeof performance && performance.now() ? performance.now() : Date.now();\n                ba === p && (ba = e);\n                var d = (e - ba) * b.hfov / 1700, d = Math.min(d, 1);\n                r[0] && !0 === b.keyboardZoom && (x(b.hfov + (0.8 * w.hfov + 0.5) * d), a = !0);\n                r[1] && !0 === b.keyboardZoom && (x(b.hfov + (0.8 * w.hfov - 0.2) * d), a = !0);\n                if (r[2] || r[6]) b.pitch += (0.8 * w.pitch + 0.2) * d, a = !0;\n                if (r[3] || r[7]) b.pitch += (0.8 * w.pitch - 0.2) * d, a = !0;\n                if (r[4] || r[8]) b.yaw += (0.8 * w.yaw - 0.2) * d, a = !0;\n                if (r[5] || r[9]) b.yaw += (0.8 * w.yaw + 0.2) * d, a = !0;\n                a && (N = Date.now());\n                if (b.autoRotate) {\n                    if (0.001 < e - ba) {\n                        var a = (e - ba) / 1E3, g = (w.yaw / a * d - 0.2 * b.autoRotate) * a, g = (0 < -b.autoRotate ? 1 : -1) * Math.min(Math.abs(b.autoRotate * a), Math.abs(g));\n                        b.yaw += g;\n                    }\n                    b.autoRotateStopDelay && (b.autoRotateStopDelay -= e - ba, 0 >= b.autoRotateStopDelay && (b.autoRotateStopDelay = !1, Z = b.autoRotate, b.autoRotate = 0));\n                }\n                O.pitch && (m(\"pitch\"), f = b.pitch);\n                O.yaw && (m(\"yaw\"), n = b.yaw);\n                O.hfov && (m(\"hfov\"), c = b.hfov);\n                0 < d && !b.autoRotate && (a = 1 - b.friction, r[4] || r[5] || r[8] || r[9] || O.yaw || (b.yaw += w.yaw * d * a), r[2] || r[3] || r[6] || r[7] || O.pitch || (b.pitch += w.pitch * d * a), r[0] || r[1] || O.hfov || x(b.hfov + w.hfov * d * a));\n                ba = e;\n                0 < d && (w.yaw = 0.8 * w.yaw + (b.yaw - n) / d * 0.2, w.pitch = 0.8 * w.pitch + (b.pitch - f) / d * 0.2, w.hfov = 0.8 * w.hfov + (b.hfov - c) / d * 0.2, f = b.autoRotate ? Math.abs(b.autoRotate) : 5, w.yaw = Math.min(f, Math.max(w.yaw, -f)), w.pitch = Math.min(f, Math.max(w.pitch, -f)), w.hfov = Math.min(f, Math.max(w.hfov, -f)));\n                r[0] && r[1] && (w.hfov = 0);\n                (r[2] || r[6]) && (r[3] || r[7]) && (w.pitch = 0);\n                (r[4] || r[8]) && (r[5] || r[9]) && (w.yaw = 0);\n            }\n        }\n        function m(a) {\n            var f = O[a], n = Math.min(1, Math.max((Date.now() - f.startTime) / 1E3 / (f.duration / 1E3), 0)), n = f.startPosition + b.animationTimingFunction(n) * (f.endPosition - f.startPosition);\n            if (f.endPosition > f.startPosition && n >= f.endPosition || f.endPosition < f.startPosition && n <= f.endPosition || f.endPosition === f.startPosition) n = f.endPosition, w[a] = 0, delete O[a];\n            b[a] = n;\n        }\n        function z() {\n            d(\"resize\");\n        }\n        function F() {\n            Ta || (Ta = !0, ca());\n        }\n        function ca() {\n            if (!Za) if (Fa(), Qa && clearTimeout(Qa), ha || !0 === X) requestAnimationFrame(ca);\n            else if (r[0] || r[1] || r[2] || r[3] || r[4] || r[5] || r[6] || r[7] || r[8] || r[9] || b.autoRotate || O.pitch || O.yaw || O.hfov || 0.01 < Math.abs(w.yaw) || 0.01 < Math.abs(w.pitch) || 0.01 < Math.abs(w.hfov)) ga(), 0 <= b.autoRotateInactivityDelay && Z && Date.now() - N > b.autoRotateInactivityDelay && !b.autoRotate && (b.autoRotate = Z, da.lookAt(Ga, p, ra, 3E3)), requestAnimationFrame(ca);\n            else if (C && (C.isLoading() || !0 === b.dynamic && Ma)) requestAnimationFrame(ca);\n            else {\n                B(\"animatefinished\", {\n                    pitch: da.getPitch(),\n                    yaw: da.getYaw(),\n                    hfov: da.getHfov()\n                });\n                Ta = !1;\n                ba = p;\n                var a = b.autoRotateInactivityDelay - (Date.now() - N);\n                0 < a ? Qa = setTimeout(function() {\n                    b.autoRotate = Z;\n                    da.lookAt(Ga, p, ra, 3E3);\n                    F();\n                }, a) : 0 <= b.autoRotateInactivityDelay && Z && (b.autoRotate = Z, da.lookAt(Ga, p, ra, 3E3), F());\n            }\n        }\n        function Fa() {\n            var a;\n            if (G) {\n                var f = C.getCanvas();\n                !1 !== b.autoRotate && (360 < b.yaw ? b.yaw -= 360 : -360 > b.yaw && (b.yaw += 360));\n                a = b.yaw;\n                var n = 0;\n                if (b.avoidShowingBackground) {\n                    var c = b.hfov / 2, d = 180 * Math.atan2(Math.tan(c / 180 * Math.PI), f.width / f.height) / Math.PI;\n                    b.vaov > b.haov ? Math.min(Math.cos((b.pitch - c) / 180 * Math.PI), Math.cos((b.pitch + c) / 180 * Math.PI)) : n = c * (1 - Math.min(Math.cos((b.pitch - d) / 180 * Math.PI), Math.cos((b.pitch + d) / 180 * Math.PI)));\n                }\n                var c = b.maxYaw - b.minYaw, d = -180, e = 180;\n                360 > c && (d = b.minYaw + b.hfov / 2 + n, e = b.maxYaw - b.hfov / 2 - n, c < b.hfov && (d = e = (d + e) / 2), b.yaw = Math.max(d, Math.min(e, b.yaw)));\n                !1 === b.autoRotate && (360 < b.yaw ? b.yaw -= 360 : -360 > b.yaw && (b.yaw += 360));\n                !1 !== b.autoRotate && a != b.yaw && ba !== p && (b.autoRotate *= -1);\n                a = 2 * Math.atan(Math.tan(b.hfov / 180 * Math.PI * 0.5) / (f.width / f.height)) / Math.PI * 180;\n                f = b.minPitch + a / 2;\n                n = b.maxPitch - a / 2;\n                b.maxPitch - b.minPitch < a && (f = n = (f + n) / 2);\n                isNaN(f) && (f = -90);\n                isNaN(n) && (n = 90);\n                b.pitch = Math.max(f, Math.min(n, b.pitch));\n                C.render(b.pitch * Math.PI / 180, b.yaw * Math.PI / 180, b.hfov * Math.PI / 180, {\n                    roll: b.roll * Math.PI / 180\n                });\n                b.hotSpots.forEach(Ca);\n                b.compass && (Ia.style.transform = \"rotate(\" + (-b.yaw - b.northOffset) + \"deg)\", Ia.style.webkitTransform = \"rotate(\" + (-b.yaw - b.northOffset) + \"deg)\");\n            }\n        }\n        function Y(a, b, c, d) {\n            this.w = a;\n            this.x = b;\n            this.y = c;\n            this.z = d;\n        }\n        function na(a) {\n            var f;\n            f = a.alpha;\n            var c = a.beta;\n            a = a.gamma;\n            c = [\n                c ? c * Math.PI / 180 / 2 : 0,\n                a ? a * Math.PI / 180 / 2 : 0,\n                f ? f * Math.PI / 180 / 2 : 0\n            ];\n            f = [\n                Math.cos(c[0]),\n                Math.cos(c[1]),\n                Math.cos(c[2])\n            ];\n            c = [\n                Math.sin(c[0]),\n                Math.sin(c[1]),\n                Math.sin(c[2])\n            ];\n            f = new Y(f[0] * f[1] * f[2] - c[0] * c[1] * c[2], c[0] * f[1] * f[2] - f[0] * c[1] * c[2], f[0] * c[1] * f[2] + c[0] * f[1] * c[2], f[0] * f[1] * c[2] + c[0] * c[1] * f[2]);\n            f = f.multiply(new Y(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n            c = E.orientation ? -E.orientation * Math.PI / 180 / 2 : 0;\n            f = f.multiply(new Y(Math.cos(c), 0, -Math.sin(c), 0)).toEulerAngles();\n            \"number\" == typeof X && 10 > X ? X += 1 : 10 === X ? ($a = f[2] / Math.PI * 180 + b.yaw, X = !0, requestAnimationFrame(ca)) : (b.pitch = f[0] / Math.PI * 180, b.roll = -f[1] / Math.PI * 180, b.yaw = -f[2] / Math.PI * 180 + $a);\n        }\n        function va() {\n            try {\n                var a = {};\n                b.horizonPitch !== p && (a.horizonPitch = b.horizonPitch * Math.PI / 180);\n                b.horizonRoll !== p && (a.horizonRoll = b.horizonRoll * Math.PI / 180);\n                b.backgroundColor !== p && (a.backgroundColor = b.backgroundColor);\n                C.init(P, b.type, b.dynamic, b.haov * Math.PI / 180, b.vaov * Math.PI / 180, b.vOffset * Math.PI / 180, S, a);\n                !0 !== b.dynamic && (P = p);\n            } catch (f) {\n                if (\"webgl error\" == f.type || \"no webgl\" == f.type) K();\n                else if (\"webgl size error\" == f.type) K(b.strings.textureSizeError.replace(\"%s\", f.width).replace(\"%s\", f.maxWidth));\n                else throw K(b.strings.unknownError), f;\n            }\n        }\n        function S() {\n            if (b.sceneFadeDuration && C.fadeImg !== p) {\n                C.fadeImg.style.opacity = 0;\n                var a = C.fadeImg;\n                delete C.fadeImg;\n                setTimeout(function() {\n                    M.removeChild(a);\n                    B(\"scenechangefadedone\");\n                }, b.sceneFadeDuration);\n            }\n            Ia.style.display = b.compass ? \"inline\" : \"none\";\n            L();\n            q.load.box.style.display = \"none\";\n            sa !== p && (M.removeChild(sa), sa = p);\n            G = !0;\n            B(\"load\");\n            F();\n        }\n        function La(a) {\n            a.pitch = Number(a.pitch) || 0;\n            a.yaw = Number(a.yaw) || 0;\n            var f = g.createElement(\"div\");\n            f.className = \"pnlm-hotspot-base\";\n            f.className = a.cssClass ? f.className + (\" \" + a.cssClass) : f.className + (\" pnlm-hotspot pnlm-sprite pnlm-\" + D(a.type));\n            var c = g.createElement(\"span\");\n            a.text && (c.innerHTML = D(a.text));\n            var d;\n            if (a.video) {\n                d = g.createElement(\"video\");\n                var e = a.video;\n                b.basePath && !qa(e) && (e = b.basePath + e);\n                d.src = I(e);\n                d.controls = !0;\n                d.style.width = a.width + \"px\";\n                M.appendChild(f);\n                c.appendChild(d);\n            } else if (a.image) {\n                e = a.image;\n                b.basePath && !qa(e) && (e = b.basePath + e);\n                d = g.createElement(\"a\");\n                d.href = I(a.URL ? a.URL : e, !0);\n                d.target = \"_blank\";\n                c.appendChild(d);\n                var h = g.createElement(\"img\");\n                h.src = I(e);\n                h.style.width = a.width + \"px\";\n                h.style.paddingTop = \"5px\";\n                M.appendChild(f);\n                d.appendChild(h);\n                c.style.maxWidth = \"initial\";\n            } else if (a.URL) {\n                d = g.createElement(\"a\");\n                d.href = I(a.URL, !0);\n                if (a.attributes) for(e in a.attributes)d.setAttribute(e, a.attributes[e]);\n                else d.target = \"_blank\";\n                M.appendChild(d);\n                f.className += \" pnlm-pointer\";\n                c.className += \" pnlm-pointer\";\n                d.appendChild(f);\n            } else a.sceneId && (f.onclick = f.ontouchend = function() {\n                f.clicked || (f.clicked = !0, y(a.sceneId, a.targetPitch, a.targetYaw, a.targetHfov));\n                return !1;\n            }, f.className += \" pnlm-pointer\", c.className += \" pnlm-pointer\"), M.appendChild(f);\n            if (a.createTooltipFunc) a.createTooltipFunc(f, a.createTooltipArgs);\n            else if (a.text || a.video || a.image) f.classList.add(\"pnlm-tooltip\"), f.appendChild(c), c.style.width = c.scrollWidth - 20 + \"px\", c.style.marginLeft = -(c.scrollWidth - f.offsetWidth) / 2 + \"px\", c.style.marginTop = -c.scrollHeight - 12 + \"px\";\n            a.clickHandlerFunc && (f.addEventListener(\"click\", function(b) {\n                a.clickHandlerFunc(b, a.clickHandlerArgs);\n            }, \"false\"), f.className += \" pnlm-pointer\", c.className += \" pnlm-pointer\");\n            a.div = f;\n        }\n        function L() {\n            Ua || (b.hotSpots ? (b.hotSpots = b.hotSpots.sort(function(a, b) {\n                return a.pitch < b.pitch;\n            }), b.hotSpots.forEach(La)) : b.hotSpots = [], Ua = !0, b.hotSpots.forEach(Ca));\n        }\n        function e() {\n            var a = b.hotSpots;\n            Ua = !1;\n            delete b.hotSpots;\n            if (a) for(var f = 0; f < a.length; f++){\n                var c = a[f].div;\n                if (c) {\n                    for(; c.parentNode && c.parentNode != M;)c = c.parentNode;\n                    M.removeChild(c);\n                }\n                delete a[f].div;\n            }\n        }\n        function Ca(a) {\n            var f = Math.sin(a.pitch * Math.PI / 180), c = Math.cos(a.pitch * Math.PI / 180), d = Math.sin(b.pitch * Math.PI / 180), e = Math.cos(b.pitch * Math.PI / 180), g = Math.cos((-a.yaw + b.yaw) * Math.PI / 180), h = f * d + c * g * e;\n            if (90 >= a.yaw && -90 < a.yaw && 0 >= h || (90 < a.yaw || -90 >= a.yaw) && 0 >= h) a.div.style.visibility = \"hidden\";\n            else {\n                var l = Math.sin((-a.yaw + b.yaw) * Math.PI / 180), k = Math.tan(b.hfov * Math.PI / 360);\n                a.div.style.visibility = \"visible\";\n                var m = C.getCanvas(), p = m.clientWidth, m = m.clientHeight, f = [\n                    -p / k * l * c / h / 2,\n                    -p / k * (f * e - c * g * d) / h / 2\n                ], c = Math.sin(b.roll * Math.PI / 180), d = Math.cos(b.roll * Math.PI / 180), f = [\n                    f[0] * d - f[1] * c,\n                    f[0] * c + f[1] * d\n                ];\n                f[0] += (p - a.div.offsetWidth) / 2;\n                f[1] += (m - a.div.offsetHeight) / 2;\n                p = \"translate(\" + f[0] + \"px, \" + f[1] + \"px) translateZ(9999px) rotate(\" + b.roll + \"deg)\";\n                a.scale && (p += \" scale(\" + ra / b.hfov / h + \")\");\n                a.div.style.webkitTransform = p;\n                a.div.style.MozTransform = p;\n                a.div.style.transform = p;\n            }\n        }\n        function H(a) {\n            b = {};\n            var f, c, d = \"haov vaov vOffset northOffset horizonPitch horizonRoll\".split(\" \");\n            aa = [];\n            for(f in Va)Va.hasOwnProperty(f) && (b[f] = Va[f]);\n            for(f in k.default)if (k.default.hasOwnProperty(f)) if (\"strings\" == f) for(c in k.default.strings)k.default.strings.hasOwnProperty(c) && (b.strings[c] = D(k.default.strings[c]));\n            else b[f] = k.default[f], 0 <= d.indexOf(f) && aa.push(f);\n            if (null !== a && \"\" !== a && k.scenes && k.scenes[a]) {\n                var e = k.scenes[a];\n                for(f in e)if (e.hasOwnProperty(f)) if (\"strings\" == f) for(c in e.strings)e.strings.hasOwnProperty(c) && (b.strings[c] = D(e.strings[c]));\n                else b[f] = e[f], 0 <= d.indexOf(f) && aa.push(f);\n                b.scene = a;\n            }\n            for(f in k)if (k.hasOwnProperty(f)) if (\"strings\" == f) for(c in k.strings)k.strings.hasOwnProperty(c) && (b.strings[c] = D(k.strings[c]));\n            else b[f] = k[f], 0 <= d.indexOf(f) && aa.push(f);\n        }\n        function l(a) {\n            if ((a = a ? a : !1) && \"preview\" in b) {\n                var c = b.preview;\n                b.basePath && !qa(c) && (c = b.basePath + c);\n                sa = g.createElement(\"div\");\n                sa.className = \"pnlm-preview-img\";\n                sa.style.backgroundImage = \"url('\" + I(c).replace(/\"/g, \"%22\").replace(/'/g, \"%27\") + \"')\";\n                M.appendChild(sa);\n            }\n            var c = b.title, d = b.author;\n            a && (\"previewTitle\" in b && (b.title = b.previewTitle), \"previewAuthor\" in b && (b.author = b.previewAuthor));\n            b.hasOwnProperty(\"title\") || (q.title.innerHTML = \"\");\n            b.hasOwnProperty(\"author\") || (q.author.innerHTML = \"\");\n            b.hasOwnProperty(\"title\") || b.hasOwnProperty(\"author\") || (q.container.style.display = \"none\");\n            v.load.innerHTML = \"<p>\" + b.strings.loadButtonLabel + \"</p>\";\n            q.load.boxp.innerHTML = b.strings.loadingLabel;\n            for(var e in b)if (b.hasOwnProperty(e)) switch(e){\n                case \"title\":\n                    q.title.innerHTML = D(b[e]);\n                    q.container.style.display = \"inline\";\n                    break;\n                case \"author\":\n                    var h = D(b[e]);\n                    b.authorURL && (h = g.createElement(\"a\"), h.href = I(b.authorURL, !0), h.target = \"_blank\", h.innerHTML = D(b[e]), h = h.outerHTML);\n                    q.author.innerHTML = b.strings.bylineLabel.replace(\"%s\", h);\n                    q.container.style.display = \"inline\";\n                    break;\n                case \"fallback\":\n                    h = g.createElement(\"a\");\n                    h.href = I(b[e], !0);\n                    h.target = \"_blank\";\n                    h.textContent = \"Click here to view this panorama in an alternative viewer.\";\n                    var k = g.createElement(\"p\");\n                    k.textContent = \"Your browser does not support WebGL.\";\n                    k.appendChild(g.createElement(\"br\"));\n                    k.appendChild(h);\n                    q.errorMsg.innerHTML = \"\";\n                    q.errorMsg.appendChild(k);\n                    break;\n                case \"hfov\":\n                    x(Number(b[e]));\n                    break;\n                case \"autoLoad\":\n                    !0 === b[e] && C === p && (q.load.box.style.display = \"inline\", v.load.style.display = \"none\", oa());\n                    break;\n                case \"showZoomCtrl\":\n                    v.zoom.style.display = b[e] && !1 != b.showControls ? \"block\" : \"none\";\n                    break;\n                case \"showFullscreenCtrl\":\n                    v.fullscreen.style.display = b[e] && !1 != b.showControls && (\"fullscreen\" in g || \"mozFullScreen\" in g || \"webkitIsFullScreen\" in g || \"msFullscreenElement\" in g) ? \"block\" : \"none\";\n                    break;\n                case \"hotSpotDebug\":\n                    Wa.style.display = b[e] ? \"block\" : \"none\";\n                    break;\n                case \"showControls\":\n                    b[e] || (v.orientation.style.display = \"none\", v.zoom.style.display = \"none\", v.fullscreen.style.display = \"none\");\n                    break;\n                case \"orientationOnByDefault\":\n                    b[e] && Ra();\n            }\n            a && (c ? b.title = c : delete b.title, d ? b.author = d : delete b.author);\n        }\n        function h() {\n            if (G && !Na) if (Aa) g.exitFullscreen ? g.exitFullscreen() : g.mozCancelFullScreen ? g.mozCancelFullScreen() : g.webkitCancelFullScreen ? g.webkitCancelFullScreen() : g.msExitFullscreen && g.msExitFullscreen();\n            else try {\n                s.requestFullscreen ? s.requestFullscreen() : s.mozRequestFullScreen ? s.mozRequestFullScreen() : s.msRequestFullscreen ? s.msRequestFullscreen() : s.webkitRequestFullScreen();\n            } catch (a) {}\n        }\n        function d(a) {\n            g.fullscreenElement || g.fullscreen || g.mozFullScreen || g.webkitIsFullScreen || g.msFullscreenElement ? (v.fullscreen.classList.add(\"pnlm-fullscreen-toggle-button-active\"), Aa = !0) : (v.fullscreen.classList.remove(\"pnlm-fullscreen-toggle-button-active\"), Aa = !1);\n            \"resize\" !== a && B(\"fullscreenchange\", Aa);\n            C.resize();\n            x(b.hfov);\n            F();\n        }\n        function u(a) {\n            var c = b.minHfov;\n            \"multires\" == b.type && C && !b.multiResMinHfov && (c = Math.min(c, C.getCanvas().width / (b.multiRes.cubeResolution / 90 * 0.9)));\n            if (c > b.maxHfov) return console.log(\"HFOV bounds do not make sense (minHfov > maxHfov).\"), b.hfov;\n            var d = b.hfov, d = a < c ? c : a > b.maxHfov ? b.maxHfov : a;\n            b.avoidShowingBackground && C && (a = C.getCanvas(), d = Math.min(d, 360 * Math.atan(Math.tan((b.maxPitch - b.minPitch) / 360 * Math.PI) / a.height * a.width) / Math.PI));\n            return d;\n        }\n        function x(a) {\n            b.hfov = u(a);\n            B(\"zoomchange\", b.hfov);\n        }\n        function t() {\n            O = {};\n            Z = b.autoRotate ? b.autoRotate : Z;\n            b.autoRotate = !1;\n        }\n        function Ya() {\n            Na && (q.load.box.style.display = \"none\", q.errorMsg.style.display = \"none\", Na = !1, M.style.display = \"block\", B(\"errorcleared\"));\n            G = !1;\n            v.load.style.display = \"none\";\n            q.load.box.style.display = \"inline\";\n            oa();\n        }\n        function y(a, c, d, h, g) {\n            G || (g = !0);\n            G = !1;\n            O = {};\n            var m, q;\n            if (b.sceneFadeDuration && !g && (m = C.render(b.pitch * Math.PI / 180, b.yaw * Math.PI / 180, b.hfov * Math.PI / 180, {\n                returnImage: !0\n            }), m !== p)) {\n                g = new Image;\n                g.className = \"pnlm-fade-img\";\n                g.style.transition = \"opacity \" + b.sceneFadeDuration / 1E3 + \"s\";\n                g.style.width = \"100%\";\n                g.style.height = \"100%\";\n                g.onload = function() {\n                    y(a, c, d, h, !0);\n                };\n                g.src = m;\n                M.appendChild(g);\n                C.fadeImg = g;\n                return;\n            }\n            g = \"same\" === c ? b.pitch : c;\n            m = \"same\" === d ? b.yaw : \"sameAzimuth\" === d ? b.yaw + (b.northOffset || 0) - (k.scenes[a].northOffset || 0) : d;\n            q = \"same\" === h ? b.hfov : h;\n            e();\n            H(a);\n            w.yaw = w.pitch = w.hfov = 0;\n            l();\n            g !== p && (b.pitch = g);\n            m !== p && (b.yaw = m);\n            q !== p && (b.hfov = q);\n            B(\"scenechange\", a);\n            Ya();\n        }\n        function Da() {\n            E.removeEventListener(\"deviceorientation\", na);\n            v.orientation.classList.remove(\"pnlm-orientation-button-active\");\n            X = !1;\n        }\n        function Ra() {\n            \"function\" === typeof DeviceMotionEvent.requestPermission ? DeviceOrientationEvent.requestPermission().then(function(a) {\n                \"granted\" == a && (X = 1, E.addEventListener(\"deviceorientation\", na), v.orientation.classList.add(\"pnlm-orientation-button-active\"));\n            }) : (X = 1, E.addEventListener(\"deviceorientation\", na), v.orientation.classList.add(\"pnlm-orientation-button-active\"));\n        }\n        function D(a) {\n            return k.escapeHTML ? String(a).split(/&/g).join(\"&amp;\").split('\"').join(\"&quot;\").split(\"'\").join(\"&#39;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split(\"/\").join(\"&#x2f;\").split(\"\\n\").join(\"<br>\") : String(a).split(\"\\n\").join(\"<br>\");\n        }\n        function I(a, b) {\n            try {\n                var c = decodeURIComponent(ab(a)).replace(/[^\\w:]/g, \"\").toLowerCase();\n            } catch (d) {\n                return \"about:blank\";\n            }\n            return 0 === c.indexOf(\"javascript:\") || 0 === c.indexOf(\"vbscript:\") ? (console.log(\"Script URL removed.\"), \"about:blank\") : b && 0 === c.indexOf(\"data:\") ? (console.log(\"Data URI removed from link.\"), \"about:blank\") : a;\n        }\n        function ab(a) {\n            return a.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(a, b) {\n                b = b.toLowerCase();\n                return \"colon\" === b ? \":\" : \"#\" === b.charAt(0) ? \"x\" === b.charAt(1) ? String.fromCharCode(parseInt(b.substring(2), 16)) : String.fromCharCode(+b.substring(1)) : \"\";\n            });\n        }\n        function B(a) {\n            if (a in T) for(var b = T[a].length; 0 < b; b--)T[a][T[a].length - b].apply(null, [].slice.call(arguments, 1));\n        }\n        var da = this, b, C, sa, ha = !1, N = Date.now(), xa = 0, ya = 0, Ha = -1, Oa = 0, Pa = 0, r = Array(10), Aa = !1, G, Na = !1, Sa = !1, P, ba, w = {\n            yaw: 0,\n            pitch: 0,\n            hfov: 0\n        }, Ta = !1, X = !1, $a = 0, Qa, Z = 0, ra, Ga, O = {}, T = {}, aa = [], Ma = !1, Ua = !1, Za = !1, Va = {\n            hfov: 100,\n            minHfov: 50,\n            multiResMinHfov: !1,\n            maxHfov: 120,\n            pitch: 0,\n            minPitch: p,\n            maxPitch: p,\n            yaw: 0,\n            minYaw: -180,\n            maxYaw: 180,\n            roll: 0,\n            haov: 360,\n            vaov: 180,\n            vOffset: 0,\n            autoRotate: !1,\n            autoRotateInactivityDelay: -1,\n            autoRotateStopDelay: p,\n            type: \"equirectangular\",\n            northOffset: 0,\n            showFullscreenCtrl: !0,\n            dynamic: !1,\n            dynamicUpdate: !1,\n            doubleClickZoom: !0,\n            keyboardZoom: !0,\n            mouseZoom: !0,\n            showZoomCtrl: !0,\n            autoLoad: !1,\n            showControls: !0,\n            orientationOnByDefault: !1,\n            hotSpotDebug: !1,\n            backgroundColor: [\n                0,\n                0,\n                0\n            ],\n            avoidShowingBackground: !1,\n            animationTimingFunction: function(a) {\n                return 0.5 > a ? 2 * a * a : -1 + (4 - 2 * a) * a;\n            },\n            draggable: !0,\n            disableKeyboardCtrl: !1,\n            crossOrigin: \"anonymous\",\n            touchPanSpeedCoeffFactor: 1,\n            capturedKeyNumbers: [\n                16,\n                17,\n                27,\n                37,\n                38,\n                39,\n                40,\n                61,\n                65,\n                68,\n                83,\n                87,\n                107,\n                109,\n                173,\n                187,\n                189\n            ],\n            friction: 0.15,\n            strings: {\n                loadButtonLabel: \"Click to<br>Load<br>Panorama\",\n                loadingLabel: \"Loading...\",\n                bylineLabel: \"by %s\",\n                noPanoramaError: \"No panorama image was specified.\",\n                fileAccessError: \"The file %s could not be accessed.\",\n                malformedURLError: \"There is something wrong with the panorama URL.\",\n                iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only progressive encoded JPEGs work for your device (this panorama uses standard encoding).\",\n                genericWebGLError: \"Your browser does not have the necessary WebGL support to display this panorama.\",\n                textureSizeError: \"This panorama is too big for your device! It's %spx wide, but your device only supports images up to %spx wide. Try another device. (If you're the author, try scaling down the image.)\",\n                unknownError: \"Unknown error. Check developer console.\"\n            }\n        };\n        s = \"string\" === typeof s ? g.getElementById(s) : s;\n        s.classList.add(\"pnlm-container\");\n        s.tabIndex = 0;\n        var J = g.createElement(\"div\");\n        J.className = \"pnlm-ui\";\n        s.appendChild(J);\n        var M = g.createElement(\"div\");\n        M.className = \"pnlm-render-container\";\n        s.appendChild(M);\n        var W = g.createElement(\"div\");\n        W.className = \"pnlm-dragfix\";\n        J.appendChild(W);\n        var fa = g.createElement(\"span\");\n        fa.className = \"pnlm-about-msg\";\n        fa.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a> 2.5.6';\n        J.appendChild(fa);\n        W.addEventListener(\"contextmenu\", ja);\n        var q = {}, Wa = g.createElement(\"div\");\n        Wa.className = \"pnlm-sprite pnlm-hot-spot-debug-indicator\";\n        J.appendChild(Wa);\n        q.container = g.createElement(\"div\");\n        q.container.className = \"pnlm-panorama-info\";\n        q.title = g.createElement(\"div\");\n        q.title.className = \"pnlm-title-box\";\n        q.container.appendChild(q.title);\n        q.author = g.createElement(\"div\");\n        q.author.className = \"pnlm-author-box\";\n        q.container.appendChild(q.author);\n        J.appendChild(q.container);\n        q.load = {};\n        q.load.box = g.createElement(\"div\");\n        q.load.box.className = \"pnlm-load-box\";\n        q.load.boxp = g.createElement(\"p\");\n        q.load.box.appendChild(q.load.boxp);\n        q.load.lbox = g.createElement(\"div\");\n        q.load.lbox.className = \"pnlm-lbox\";\n        q.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n        q.load.box.appendChild(q.load.lbox);\n        q.load.lbar = g.createElement(\"div\");\n        q.load.lbar.className = \"pnlm-lbar\";\n        q.load.lbarFill = g.createElement(\"div\");\n        q.load.lbarFill.className = \"pnlm-lbar-fill\";\n        q.load.lbar.appendChild(q.load.lbarFill);\n        q.load.box.appendChild(q.load.lbar);\n        q.load.msg = g.createElement(\"p\");\n        q.load.msg.className = \"pnlm-lmsg\";\n        q.load.box.appendChild(q.load.msg);\n        J.appendChild(q.load.box);\n        q.errorMsg = g.createElement(\"div\");\n        q.errorMsg.className = \"pnlm-error-msg pnlm-info-box\";\n        J.appendChild(q.errorMsg);\n        var v = {};\n        v.container = g.createElement(\"div\");\n        v.container.className = \"pnlm-controls-container\";\n        J.appendChild(v.container);\n        v.load = g.createElement(\"div\");\n        v.load.className = \"pnlm-load-button\";\n        v.load.addEventListener(\"click\", function() {\n            l();\n            Ya();\n        });\n        J.appendChild(v.load);\n        v.zoom = g.createElement(\"div\");\n        v.zoom.className = \"pnlm-zoom-controls pnlm-controls\";\n        v.zoomIn = g.createElement(\"div\");\n        v.zoomIn.className = \"pnlm-zoom-in pnlm-sprite pnlm-control\";\n        v.zoomIn.addEventListener(\"click\", function() {\n            G && (x(b.hfov - 5), F());\n        });\n        v.zoom.appendChild(v.zoomIn);\n        v.zoomOut = g.createElement(\"div\");\n        v.zoomOut.className = \"pnlm-zoom-out pnlm-sprite pnlm-control\";\n        v.zoomOut.addEventListener(\"click\", function() {\n            G && (x(b.hfov + 5), F());\n        });\n        v.zoom.appendChild(v.zoomOut);\n        v.container.appendChild(v.zoom);\n        v.fullscreen = g.createElement(\"div\");\n        v.fullscreen.addEventListener(\"click\", h);\n        v.fullscreen.className = \"pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control\";\n        (g.fullscreenEnabled || g.mozFullScreenEnabled || g.webkitFullscreenEnabled || g.msFullscreenEnabled) && v.container.appendChild(v.fullscreen);\n        v.orientation = g.createElement(\"div\");\n        v.orientation.addEventListener(\"click\", function(a) {\n            X ? Da() : Ra();\n        });\n        v.orientation.addEventListener(\"mousedown\", function(a) {\n            a.stopPropagation();\n        });\n        v.orientation.addEventListener(\"touchstart\", function(a) {\n            a.stopPropagation();\n        });\n        v.orientation.addEventListener(\"pointerdown\", function(a) {\n            a.stopPropagation();\n        });\n        v.orientation.className = \"pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control\";\n        var Xa = !1;\n        E.DeviceOrientationEvent && \"https:\" == location.protocol && 0 <= navigator.userAgent.toLowerCase().indexOf(\"mobi\") && (v.container.appendChild(v.orientation), Xa = !0);\n        var Ia = g.createElement(\"div\");\n        Ia.className = \"pnlm-compass pnlm-controls pnlm-control\";\n        J.appendChild(Ia);\n        k.firstScene ? H(k.firstScene) : k.default && k.default.firstScene ? H(k.default.firstScene) : H(null);\n        l(!0);\n        var ia = [], za = [];\n        Y.prototype.multiply = function(a) {\n            return new Y(this.w * a.w - this.x * a.x - this.y * a.y - this.z * a.z, this.x * a.w + this.w * a.x + this.y * a.z - this.z * a.y, this.y * a.w + this.w * a.y + this.z * a.x - this.x * a.z, this.z * a.w + this.w * a.z + this.x * a.y - this.y * a.x);\n        };\n        Y.prototype.toEulerAngles = function() {\n            var a = Math.atan2(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (this.x * this.x + this.y * this.y)), b = Math.asin(2 * (this.w * this.y - this.z * this.x)), c = Math.atan2(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (this.y * this.y + this.z * this.z));\n            return [\n                a,\n                b,\n                c\n            ];\n        };\n        this.isLoaded = function() {\n            return Boolean(G);\n        };\n        this.getPitch = function() {\n            return b.pitch;\n        };\n        this.setPitch = function(a, c, d, e) {\n            N = Date.now();\n            if (1E-6 >= Math.abs(a - b.pitch)) return \"function\" == typeof d && d(e), this;\n            (c = c == p ? 1E3 : Number(c)) ? (O.pitch = {\n                startTime: Date.now(),\n                startPosition: b.pitch,\n                endPosition: a,\n                duration: c\n            }, \"function\" == typeof d && setTimeout(function() {\n                d(e);\n            }, c)) : b.pitch = a;\n            F();\n            return this;\n        };\n        this.getPitchBounds = function() {\n            return [\n                b.minPitch,\n                b.maxPitch\n            ];\n        };\n        this.setPitchBounds = function(a) {\n            b.minPitch = Math.max(-90, Math.min(a[0], 90));\n            b.maxPitch = Math.max(-90, Math.min(a[1], 90));\n            return this;\n        };\n        this.getYaw = function() {\n            return (b.yaw + 540) % 360 - 180;\n        };\n        this.setYaw = function(a, c, d, e) {\n            N = Date.now();\n            if (1E-6 >= Math.abs(a - b.yaw)) return \"function\" == typeof d && d(e), this;\n            c = c == p ? 1E3 : Number(c);\n            a = (a + 180) % 360 - 180;\n            c ? (180 < b.yaw - a ? a += 360 : 180 < a - b.yaw && (a -= 360), O.yaw = {\n                startTime: Date.now(),\n                startPosition: b.yaw,\n                endPosition: a,\n                duration: c\n            }, \"function\" == typeof d && setTimeout(function() {\n                d(e);\n            }, c)) : b.yaw = a;\n            F();\n            return this;\n        };\n        this.getYawBounds = function() {\n            return [\n                b.minYaw,\n                b.maxYaw\n            ];\n        };\n        this.setYawBounds = function(a) {\n            b.minYaw = Math.max(-360, Math.min(a[0], 360));\n            b.maxYaw = Math.max(-360, Math.min(a[1], 360));\n            return this;\n        };\n        this.getHfov = function() {\n            return b.hfov;\n        };\n        this.setHfov = function(a, c, d, e) {\n            N = Date.now();\n            if (1E-6 >= Math.abs(a - b.hfov)) return \"function\" == typeof d && d(e), this;\n            (c = c == p ? 1E3 : Number(c)) ? (O.hfov = {\n                startTime: Date.now(),\n                startPosition: b.hfov,\n                endPosition: u(a),\n                duration: c\n            }, \"function\" == typeof d && setTimeout(function() {\n                d(e);\n            }, c)) : x(a);\n            F();\n            return this;\n        };\n        this.getHfovBounds = function() {\n            return [\n                b.minHfov,\n                b.maxHfov\n            ];\n        };\n        this.setHfovBounds = function(a) {\n            b.minHfov = Math.max(0, a[0]);\n            b.maxHfov = Math.max(0, a[1]);\n            return this;\n        };\n        this.lookAt = function(a, c, d, e, g, h) {\n            e = e == p ? 1E3 : Number(e);\n            a !== p && 1E-6 < Math.abs(a - b.pitch) && (this.setPitch(a, e, g, h), g = p);\n            c !== p && 1E-6 < Math.abs(c - b.yaw) && (this.setYaw(c, e, g, h), g = p);\n            d !== p && 1E-6 < Math.abs(d - b.hfov) && (this.setHfov(d, e, g, h), g = p);\n            \"function\" == typeof g && g(h);\n            return this;\n        };\n        this.getNorthOffset = function() {\n            return b.northOffset;\n        };\n        this.setNorthOffset = function(a) {\n            b.northOffset = Math.min(360, Math.max(0, a));\n            F();\n            return this;\n        };\n        this.getHorizonRoll = function() {\n            return b.horizonRoll;\n        };\n        this.setHorizonRoll = function(a) {\n            b.horizonRoll = Math.min(90, Math.max(-90, a));\n            C.setPose(b.horizonPitch * Math.PI / 180, b.horizonRoll * Math.PI / 180);\n            F();\n            return this;\n        };\n        this.getHorizonPitch = function() {\n            return b.horizonPitch;\n        };\n        this.setHorizonPitch = function(a) {\n            b.horizonPitch = Math.min(90, Math.max(-90, a));\n            C.setPose(b.horizonPitch * Math.PI / 180, b.horizonRoll * Math.PI / 180);\n            F();\n            return this;\n        };\n        this.startAutoRotate = function(a, c) {\n            a = a || Z || 1;\n            c = c === p ? Ga : c;\n            b.autoRotate = a;\n            da.lookAt(c, p, ra, 3E3);\n            F();\n            return this;\n        };\n        this.stopAutoRotate = function() {\n            Z = b.autoRotate ? b.autoRotate : Z;\n            b.autoRotate = !1;\n            b.autoRotateInactivityDelay = -1;\n            return this;\n        };\n        this.stopMovement = function() {\n            t();\n            w = {\n                yaw: 0,\n                pitch: 0,\n                hfov: 0\n            };\n        };\n        this.getRenderer = function() {\n            return C;\n        };\n        this.setUpdate = function(a) {\n            Ma = !0 === a;\n            C === p ? pa() : F();\n            return this;\n        };\n        this.mouseEventToCoords = function(a) {\n            return ta(a);\n        };\n        this.loadScene = function(a, b, c, d) {\n            !1 !== G && y(a, b, c, d);\n            return this;\n        };\n        this.getScene = function() {\n            return b.scene;\n        };\n        this.addScene = function(a, b) {\n            k.scenes[a] = b;\n            return this;\n        };\n        this.removeScene = function(a) {\n            if (b.scene === a || !k.scenes.hasOwnProperty(a)) return !1;\n            delete k.scenes[a];\n            return !0;\n        };\n        this.toggleFullscreen = function() {\n            h();\n            return this;\n        };\n        this.getConfig = function() {\n            return b;\n        };\n        this.getContainer = function() {\n            return s;\n        };\n        this.addHotSpot = function(a, c) {\n            if (c === p && b.scene === p) b.hotSpots.push(a);\n            else {\n                var d = c !== p ? c : b.scene;\n                if (k.scenes.hasOwnProperty(d)) k.scenes[d].hasOwnProperty(\"hotSpots\") || (k.scenes[d].hotSpots = [], d == b.scene && (b.hotSpots = k.scenes[d].hotSpots)), k.scenes[d].hotSpots.push(a);\n                else throw \"Invalid scene ID!\";\n            }\n            if (c === p || b.scene == c) La(a), G && Ca(a);\n            return this;\n        };\n        this.removeHotSpot = function(a, c) {\n            if (c === p || b.scene == c) {\n                if (!b.hotSpots) return !1;\n                for(var d = 0; d < b.hotSpots.length; d++)if (b.hotSpots[d].hasOwnProperty(\"id\") && b.hotSpots[d].id === a) {\n                    for(var e = b.hotSpots[d].div; e.parentNode != M;)e = e.parentNode;\n                    M.removeChild(e);\n                    delete b.hotSpots[d].div;\n                    b.hotSpots.splice(d, 1);\n                    return !0;\n                }\n            } else if (k.scenes.hasOwnProperty(c)) {\n                if (!k.scenes[c].hasOwnProperty(\"hotSpots\")) return !1;\n                for(d = 0; d < k.scenes[c].hotSpots.length; d++)if (k.scenes[c].hotSpots[d].hasOwnProperty(\"id\") && k.scenes[c].hotSpots[d].id === a) return k.scenes[c].hotSpots.splice(d, 1), !0;\n            } else return !1;\n        };\n        this.resize = function() {\n            C && z();\n        };\n        this.isLoaded = function() {\n            return G;\n        };\n        this.isOrientationSupported = function() {\n            return Xa || !1;\n        };\n        this.stopOrientation = function() {\n            Da();\n        };\n        this.startOrientation = function() {\n            Xa && Ra();\n        };\n        this.isOrientationActive = function() {\n            return Boolean(X);\n        };\n        this.on = function(a, b) {\n            T[a] = T[a] || [];\n            T[a].push(b);\n            return this;\n        };\n        this.off = function(a, b) {\n            if (!a) return T = {}, this;\n            if (b) {\n                var c = T[a].indexOf(b);\n                0 <= c && T[a].splice(c, 1);\n                0 == T[a].length && delete T[a];\n            } else delete T[a];\n            return this;\n        };\n        this.destroy = function() {\n            Za = !0;\n            clearTimeout(Qa);\n            C && C.destroy();\n            Sa && (g.removeEventListener(\"mousemove\", ua, !1), g.removeEventListener(\"mouseup\", ma, !1), s.removeEventListener(\"mozfullscreenchange\", d, !1), s.removeEventListener(\"webkitfullscreenchange\", d, !1), s.removeEventListener(\"msfullscreenchange\", d, !1), s.removeEventListener(\"fullscreenchange\", d, !1), E.removeEventListener(\"resize\", z, !1), E.removeEventListener(\"orientationchange\", z, !1), s.removeEventListener(\"keydown\", V, !1), s.removeEventListener(\"keyup\", R, !1), s.removeEventListener(\"blur\", $, !1), g.removeEventListener(\"mouseleave\", ma, !1));\n            s.innerHTML = \"\";\n            s.classList.remove(\"pnlm-container\");\n        };\n    }\n    return {\n        viewer: function(g, k) {\n            return new Ba(g, k);\n        }\n    };\n}(window, document);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pannellum/build/pannellum.js\n");

/***/ })

};
;