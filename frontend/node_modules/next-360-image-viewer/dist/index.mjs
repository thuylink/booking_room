// src/NextImageTurntable.tsx
import Image from "next/image";

// src/hooks.ts
import { useEffect, useRef, useState } from "react";
var useTurntableState = ({
  initialImageIndex,
  imagesCount,
  movementSensitivity
}) => {
  const [activeImageIndex, setActiveImageIndex] = useState(initialImageIndex);
  const ref = useRef(null);
  useEffect(() => {
    setActiveImageIndex(initialImageIndex);
  }, [initialImageIndex]);
  useEffect(() => {
    const target = ref.current;
    let prevDragPosition = 0;
    const incrementActiveIndex = () => {
      setActiveImageIndex((prev) => prev + 1 > imagesCount ? 0 : prev + 1);
    };
    const decrementActiveIndex = () => {
      setActiveImageIndex((prev) => prev - 1 < 0 ? imagesCount : prev - 1);
    };
    const handleKeyDown = (ev) => {
      if (ev.key === "ArrowLeft") {
        decrementActiveIndex();
      } else if (ev.key === "ArrowRight") {
        incrementActiveIndex();
      }
    };
    const handlePointerMove = (ev) => {
      const distanceDragged = prevDragPosition - ev.clientX;
      if (distanceDragged <= -movementSensitivity) {
        prevDragPosition = prevDragPosition + movementSensitivity;
        incrementActiveIndex();
      }
      if (distanceDragged >= movementSensitivity) {
        prevDragPosition = prevDragPosition - movementSensitivity;
        decrementActiveIndex();
      }
    };
    const handlePointerUp = () => {
      window.removeEventListener("pointermove", handlePointerMove);
      window.removeEventListener("pointerup", handlePointerUp);
    };
    const handlePointerDown = (ev) => {
      if (ev.button == 2) {
        return;
      }
      prevDragPosition = ev.clientX;
      window.addEventListener("pointermove", handlePointerMove, { passive: true });
      window.addEventListener("pointerup", handlePointerUp, { passive: true });
    };
    target.addEventListener("keydown", handleKeyDown, { capture: true });
    target.addEventListener("pointerdown", handlePointerDown, { capture: true });
    return () => {
      target.removeEventListener("keydown", handleKeyDown, { capture: true });
      target.removeEventListener("pointerdown", handlePointerDown, { capture: true });
      window.removeEventListener("pointerup", handlePointerUp);
      window.removeEventListener("pointermove", handlePointerMove);
    };
  }, [imagesCount, movementSensitivity]);
  return {
    ref,
    activeImageIndex
  };
};

// src/NextImageTurntable.tsx
import { jsx } from "react/jsx-runtime";
var CLASS_NAME_IMG = "__react-image-turntable-img";
var CLASS_NAME_IMG_PRIMARY = `${CLASS_NAME_IMG}--primary`;
var CLASS_NAME_IMG_SECONDARY = `${CLASS_NAME_IMG}--secondary`;
var imgBaseStyle = {
  maxWidth: "100%"
};
var handleImgDragStart = (ev) => {
  ev.preventDefault();
};
var NextImageTurntable = ({
  images,
  initialImageIndex = 0,
  style,
  tabIndex = 0,
  movementSensitivity = 20,
  ...props
}) => {
  const { ref, activeImageIndex } = useTurntableState({
    initialImageIndex,
    imagesCount: images.length - 1,
    movementSensitivity
  });
  const rootStyle = {
    position: "relative",
    touchAction: "none",
    userSelect: "none",
    ...style
  };
  return /* @__PURE__ */ jsx("div", {
    "aria-label": "Image turntable",
    ...props,
    ref,
    role: "slider",
    "aria-valuemin": 1,
    "aria-valuemax": images.length,
    "aria-valuenow": activeImageIndex + 1,
    "aria-valuetext": `${activeImageIndex + 1} of ${images.length}`,
    style: rootStyle,
    tabIndex,
    children: images.map((src, index) => /* @__PURE__ */ jsx(Image, {
      className: `${CLASS_NAME_IMG} ${index === 0 ? CLASS_NAME_IMG_PRIMARY : CLASS_NAME_IMG_SECONDARY}`,
      fill: true,
      sizes: "(max-width: 768px) 100vw,\n          (max-width: 1200px) 100vw,\n          100vw",
      priority: true,
      src,
      alt: `Turntable image ${index + 1}`,
      draggable: false,
      onDragStart: handleImgDragStart,
      style: {
        ...imgBaseStyle,
        position: index === 0 ? void 0 : "absolute",
        opacity: index === activeImageIndex ? 1 : 0,
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        width: "100%",
        height: "100%",
        objectFit: "cover"
      }
    }, src))
  });
};
export {
  CLASS_NAME_IMG,
  CLASS_NAME_IMG_PRIMARY,
  CLASS_NAME_IMG_SECONDARY,
  NextImageTurntable
};
//# sourceMappingURL=index.mjs.map