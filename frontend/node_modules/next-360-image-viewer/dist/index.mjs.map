{"version":3,"sources":["../src/NextImageTurntable.tsx","../src/hooks.ts"],"sourcesContent":["import React from 'react';\nimport type { CSSProperties, FC, MouseEvent } from 'react';\n\nimport Image from 'next/image'\n\nimport { useTurntableState } from './hooks';\nimport type { NextImageTurntableFullProps } from './types';\n\n/** Base `className` for images. */\nexport const CLASS_NAME_IMG = '__react-image-turntable-img';\n/** `className` of first rendered image (sets the size of the main component). */\nexport const CLASS_NAME_IMG_PRIMARY = `${CLASS_NAME_IMG}--primary`;\n/** `className` of subsequent images. */\nexport const CLASS_NAME_IMG_SECONDARY = `${CLASS_NAME_IMG}--secondary`;\n\nconst imgBaseStyle = {\n  maxWidth: '100%',\n};\n\n/**\n * Firefox desktop tries to drag the image on `mousedown` + `mousemove` so we need to prevent it\n * then mimic the default behavior of the browser.\n */\nconst handleImgDragStart = (ev: MouseEvent<HTMLImageElement>) => {\n  ev.preventDefault();\n};\n\nexport const NextImageTurntable: FC<NextImageTurntableFullProps> = ({\n  images,\n  initialImageIndex = 0,\n  style,\n  tabIndex = 0,\n  movementSensitivity = 20,\n  ...props\n}) => {\n  const { ref, activeImageIndex } = useTurntableState({\n    initialImageIndex,\n    imagesCount: images.length - 1,\n    movementSensitivity,\n  });\n\n  const rootStyle: CSSProperties = {\n    position: 'relative',\n    touchAction: 'none',\n    userSelect: 'none',\n    ...style,\n  };\n\n  return (\n    <div\n      aria-label=\"Image turntable\"\n      {...props}\n      ref={ref}\n      role=\"slider\"\n      aria-valuemin={1}\n      aria-valuemax={images.length}\n      aria-valuenow={activeImageIndex + 1}\n      aria-valuetext={`${activeImageIndex + 1} of ${images.length}`}\n      style={rootStyle}\n      tabIndex={tabIndex}\n    >\n      {images.map((src, index) => (\n        <Image\n          key={src}\n          className={`${CLASS_NAME_IMG} ${index === 0 ? CLASS_NAME_IMG_PRIMARY : CLASS_NAME_IMG_SECONDARY\n            }`}\n          fill\n          sizes=\"(max-width: 768px) 100vw,\n          (max-width: 1200px) 100vw,\n          100vw\"\n          priority={true}\n          src={src}\n          alt={`Turntable image ${index + 1}`}\n          draggable={false}\n          onDragStart={handleImgDragStart}\n          style={{\n            ...imgBaseStyle,\n            position: index === 0 ? undefined : 'absolute',\n            opacity: index === activeImageIndex ? 1 : 0,\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\n\nimport type { NextImageTurntableProps } from './types';\n\ninterface UseTurntableStateProps\n  extends Required<Pick<NextImageTurntableProps, 'initialImageIndex' | 'movementSensitivity'>> {\n  /** Number of images starting from zero. */\n  imagesCount: number;\n}\n\nexport const useTurntableState = ({\n  initialImageIndex,\n  imagesCount,\n  movementSensitivity,\n}: UseTurntableStateProps) => {\n  const [activeImageIndex, setActiveImageIndex] = useState(initialImageIndex);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setActiveImageIndex(initialImageIndex);\n  }, [initialImageIndex]);\n\n  useEffect(() => {\n    const target = ref.current as HTMLDivElement;\n    let prevDragPosition = 0;\n\n    const incrementActiveIndex = () => {\n      setActiveImageIndex((prev) => (prev + 1 > imagesCount ? 0 : prev + 1));\n    };\n\n    const decrementActiveIndex = () => {\n      setActiveImageIndex((prev) => (prev - 1 < 0 ? imagesCount : prev - 1));\n    };\n\n    const handleKeyDown = (ev: KeyboardEvent) => {\n      if (ev.key === 'ArrowLeft') {\n        decrementActiveIndex();\n      } else if (ev.key === 'ArrowRight') {\n        incrementActiveIndex();\n      }\n    };\n\n    const handlePointerMove = (ev: PointerEvent) => {\n      const distanceDragged = prevDragPosition - ev.clientX;\n\n      if (distanceDragged <= -movementSensitivity) {\n        prevDragPosition = prevDragPosition + movementSensitivity;\n        incrementActiveIndex();\n      }\n\n      if (distanceDragged >= movementSensitivity) {\n        prevDragPosition = prevDragPosition - movementSensitivity;\n        decrementActiveIndex();\n      }\n    };\n\n    const handlePointerUp = () => {\n      window.removeEventListener('pointermove', handlePointerMove);\n      window.removeEventListener('pointerup', handlePointerUp);\n    };\n\n    const handlePointerDown = (ev: PointerEvent) => {\n      if (ev.button == 2) {\n        return;\n      }\n\n      prevDragPosition = ev.clientX;\n      window.addEventListener('pointermove', handlePointerMove, { passive: true });\n      window.addEventListener('pointerup', handlePointerUp, { passive: true });\n    };\n\n    target.addEventListener('keydown', handleKeyDown, { capture: true });\n    target.addEventListener('pointerdown', handlePointerDown, { capture: true });\n\n    return () => {\n      target.removeEventListener('keydown', handleKeyDown, { capture: true });\n      target.removeEventListener('pointerdown', handlePointerDown, { capture: true });\n      window.removeEventListener('pointerup', handlePointerUp);\n      window.removeEventListener('pointermove', handlePointerMove);\n    };\n  }, [imagesCount, movementSensitivity]);\n\n  return {\n    ref,\n    activeImageIndex,\n  };\n};\n"],"mappings":"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","names":[]}